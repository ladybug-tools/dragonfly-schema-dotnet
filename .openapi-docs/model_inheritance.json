{
    "openapi": "3.0.2",
    "servers": [],
    "info": {
        "description": "Documentation for Dragonfly model schema",
        "version": "1.6.40",
        "title": "Dragonfly Model Schema",
        "contact": {
            "name": "Ladybug Tools",
            "email": "info@ladybug.tools",
            "url": "https://github.com/ladybug-tools/dragonfly-core"
        },
        "x-logo": {
            "url": "https://www.ladybug.tools/assets/img/dragonfly-large.png",
            "altText": "Dragonfly logo"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/ladybug-tools/dragonfly-schema/blob/master/LICENSE"
        }
    },
    "externalDocs": {
        "description": "OpenAPI Specification with Inheritance",
        "url": "./model_inheritance.json"
    },
    "tags": [
        {
            "name": "adiabatic_model",
            "x-displayName": "Adiabatic",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Adiabatic\" />\n"
        },
        {
            "name": "airboundaryconstruction_model",
            "x-displayName": "AirBoundaryConstruction",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AirBoundaryConstruction\" />\n"
        },
        {
            "name": "airboundaryconstructionabridged_model",
            "x-displayName": "AirBoundaryConstructionAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AirBoundaryConstructionAbridged\" />\n"
        },
        {
            "name": "allaireconomizertype_model",
            "x-displayName": "AllAirEconomizerType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AllAirEconomizerType\" />\n"
        },
        {
            "name": "apertureconstructionset_model",
            "x-displayName": "ApertureConstructionSet",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureConstructionSet\" />\n"
        },
        {
            "name": "apertureconstructionsetabridged_model",
            "x-displayName": "ApertureConstructionSetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureConstructionSetAbridged\" />\n"
        },
        {
            "name": "autocalculate_model",
            "x-displayName": "Autocalculate",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Autocalculate\" />\n"
        },
        {
            "name": "autosize_model",
            "x-displayName": "Autosize",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Autosize\" />\n"
        },
        {
            "name": "baseboard_model",
            "x-displayName": "Baseboard",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Baseboard\" />\n"
        },
        {
            "name": "baseboardequipmenttype_model",
            "x-displayName": "BaseboardEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/BaseboardEquipmentType\" />\n"
        },
        {
            "name": "building_model",
            "x-displayName": "Building",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Building\" />\n"
        },
        {
            "name": "buildingenergypropertiesabridged_model",
            "x-displayName": "BuildingEnergyPropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/BuildingEnergyPropertiesAbridged\" />\n"
        },
        {
            "name": "buildingpropertiesabridged_model",
            "x-displayName": "BuildingPropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/BuildingPropertiesAbridged\" />\n"
        },
        {
            "name": "constructionset_model",
            "x-displayName": "ConstructionSet",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ConstructionSet\" />\n"
        },
        {
            "name": "constructionsetabridged_model",
            "x-displayName": "ConstructionSetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ConstructionSetAbridged\" />\n"
        },
        {
            "name": "contextshade_model",
            "x-displayName": "ContextShade",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ContextShade\" />\n"
        },
        {
            "name": "contextshadeenergypropertiesabridged_model",
            "x-displayName": "ContextShadeEnergyPropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ContextShadeEnergyPropertiesAbridged\" />\n"
        },
        {
            "name": "contextshadepropertiesabridged_model",
            "x-displayName": "ContextShadePropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ContextShadePropertiesAbridged\" />\n"
        },
        {
            "name": "datedbasemodel_model",
            "x-displayName": "DatedBaseModel",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DatedBaseModel\" />\n"
        },
        {
            "name": "detailedwindows_model",
            "x-displayName": "DetailedWindows",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DetailedWindows\" />\n"
        },
        {
            "name": "doorconstructionset_model",
            "x-displayName": "DoorConstructionSet",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorConstructionSet\" />\n"
        },
        {
            "name": "doorconstructionsetabridged_model",
            "x-displayName": "DoorConstructionSetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorConstructionSetAbridged\" />\n"
        },
        {
            "name": "economizertype_model",
            "x-displayName": "EconomizerType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EconomizerType\" />\n"
        },
        {
            "name": "electricequipment_model",
            "x-displayName": "ElectricEquipment",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ElectricEquipment\" />\n"
        },
        {
            "name": "electricequipmentabridged_model",
            "x-displayName": "ElectricEquipmentAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ElectricEquipmentAbridged\" />\n"
        },
        {
            "name": "energymaterial_model",
            "x-displayName": "EnergyMaterial",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyMaterial\" />\n"
        },
        {
            "name": "energymaterialnomass_model",
            "x-displayName": "EnergyMaterialNoMass",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyMaterialNoMass\" />\n"
        },
        {
            "name": "energywindowmaterialblind_model",
            "x-displayName": "EnergyWindowMaterialBlind",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialBlind\" />\n"
        },
        {
            "name": "energywindowmaterialgas_model",
            "x-displayName": "EnergyWindowMaterialGas",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGas\" />\n"
        },
        {
            "name": "energywindowmaterialgascustom_model",
            "x-displayName": "EnergyWindowMaterialGasCustom",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGasCustom\" />\n"
        },
        {
            "name": "energywindowmaterialgasmixture_model",
            "x-displayName": "EnergyWindowMaterialGasMixture",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGasMixture\" />\n"
        },
        {
            "name": "energywindowmaterialglazing_model",
            "x-displayName": "EnergyWindowMaterialGlazing",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGlazing\" />\n"
        },
        {
            "name": "energywindowmaterialshade_model",
            "x-displayName": "EnergyWindowMaterialShade",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialShade\" />\n"
        },
        {
            "name": "energywindowmaterialsimpleglazsys_model",
            "x-displayName": "EnergyWindowMaterialSimpleGlazSys",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialSimpleGlazSys\" />\n"
        },
        {
            "name": "evaporativecooler_model",
            "x-displayName": "EvaporativeCooler",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EvaporativeCooler\" />\n"
        },
        {
            "name": "evaporativecoolerequipmenttype_model",
            "x-displayName": "EvaporativeCoolerEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EvaporativeCoolerEquipmentType\" />\n"
        },
        {
            "name": "extrudedborder_model",
            "x-displayName": "ExtrudedBorder",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ExtrudedBorder\" />\n"
        },
        {
            "name": "fcu_model",
            "x-displayName": "FCU",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCU\" />\n"
        },
        {
            "name": "fcuequipmenttype_model",
            "x-displayName": "FCUEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCUEquipmentType\" />\n"
        },
        {
            "name": "fcuwithdoasabridged_model",
            "x-displayName": "FCUwithDOASAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCUwithDOASAbridged\" />\n"
        },
        {
            "name": "fcuwithdoasequipmenttype_model",
            "x-displayName": "FCUwithDOASEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCUwithDOASEquipmentType\" />\n"
        },
        {
            "name": "face3d_model",
            "x-displayName": "Face3D",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Face3D\" />\n"
        },
        {
            "name": "floorconstructionset_model",
            "x-displayName": "FloorConstructionSet",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FloorConstructionSet\" />\n"
        },
        {
            "name": "floorconstructionsetabridged_model",
            "x-displayName": "FloorConstructionSetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FloorConstructionSetAbridged\" />\n"
        },
        {
            "name": "forcedairfurnace_model",
            "x-displayName": "ForcedAirFurnace",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ForcedAirFurnace\" />\n"
        },
        {
            "name": "furnaceequipmenttype_model",
            "x-displayName": "FurnaceEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FurnaceEquipmentType\" />\n"
        },
        {
            "name": "gasequipment_model",
            "x-displayName": "GasEquipment",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasEquipment\" />\n"
        },
        {
            "name": "gasequipmentabridged_model",
            "x-displayName": "GasEquipmentAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasEquipmentAbridged\" />\n"
        },
        {
            "name": "gastype_model",
            "x-displayName": "GasType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasType\" />\n"
        },
        {
            "name": "gasunitheater_model",
            "x-displayName": "GasUnitHeater",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasUnitHeater\" />\n"
        },
        {
            "name": "gasunitheaterequipmenttype_model",
            "x-displayName": "GasUnitHeaterEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasUnitHeaterEquipmentType\" />\n"
        },
        {
            "name": "ground_model",
            "x-displayName": "Ground",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Ground\" />\n"
        },
        {
            "name": "iddbasemodel_model",
            "x-displayName": "IDdBaseModel",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/IDdBaseModel\" />\n"
        },
        {
            "name": "iddenergybasemodel_model",
            "x-displayName": "IDdEnergyBaseModel",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/IDdEnergyBaseModel\" />\n"
        },
        {
            "name": "idealairsystemabridged_model",
            "x-displayName": "IdealAirSystemAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/IdealAirSystemAbridged\" />\n"
        },
        {
            "name": "infiltration_model",
            "x-displayName": "Infiltration",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Infiltration\" />\n"
        },
        {
            "name": "infiltrationabridged_model",
            "x-displayName": "InfiltrationAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/InfiltrationAbridged\" />\n"
        },
        {
            "name": "lighting_model",
            "x-displayName": "Lighting",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Lighting\" />\n"
        },
        {
            "name": "lightingabridged_model",
            "x-displayName": "LightingAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/LightingAbridged\" />\n"
        },
        {
            "name": "louversbycount_model",
            "x-displayName": "LouversByCount",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/LouversByCount\" />\n"
        },
        {
            "name": "louversbydistance_model",
            "x-displayName": "LouversByDistance",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/LouversByDistance\" />\n"
        },
        {
            "name": "model_model",
            "x-displayName": "Model",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Model\" />\n"
        },
        {
            "name": "modelenergyproperties_model",
            "x-displayName": "ModelEnergyProperties",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelEnergyProperties\" />\n"
        },
        {
            "name": "modelproperties_model",
            "x-displayName": "ModelProperties",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelProperties\" />\n"
        },
        {
            "name": "nolimit_model",
            "x-displayName": "NoLimit",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/NoLimit\" />\n"
        },
        {
            "name": "opaqueconstruction_model",
            "x-displayName": "OpaqueConstruction",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/OpaqueConstruction\" />\n"
        },
        {
            "name": "opaqueconstructionabridged_model",
            "x-displayName": "OpaqueConstructionAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/OpaqueConstructionAbridged\" />\n"
        },
        {
            "name": "outdoors_model",
            "x-displayName": "Outdoors",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Outdoors\" />\n"
        },
        {
            "name": "overhang_model",
            "x-displayName": "Overhang",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Overhang\" />\n"
        },
        {
            "name": "psz_model",
            "x-displayName": "PSZ",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PSZ\" />\n"
        },
        {
            "name": "pszequipmenttype_model",
            "x-displayName": "PSZEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PSZEquipmentType\" />\n"
        },
        {
            "name": "ptac_model",
            "x-displayName": "PTAC",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PTAC\" />\n"
        },
        {
            "name": "ptacequipmenttype_model",
            "x-displayName": "PTACEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PTACEquipmentType\" />\n"
        },
        {
            "name": "pvav_model",
            "x-displayName": "PVAV",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PVAV\" />\n"
        },
        {
            "name": "pvavequipmenttype_model",
            "x-displayName": "PVAVEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PVAVEquipmentType\" />\n"
        },
        {
            "name": "people_model",
            "x-displayName": "People",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/People\" />\n"
        },
        {
            "name": "peopleabridged_model",
            "x-displayName": "PeopleAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PeopleAbridged\" />\n"
        },
        {
            "name": "plane_model",
            "x-displayName": "Plane",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Plane\" />\n"
        },
        {
            "name": "programtype_model",
            "x-displayName": "ProgramType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ProgramType\" />\n"
        },
        {
            "name": "programtypeabridged_model",
            "x-displayName": "ProgramTypeAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ProgramTypeAbridged\" />\n"
        },
        {
            "name": "rectangularwindows_model",
            "x-displayName": "RectangularWindows",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RectangularWindows\" />\n"
        },
        {
            "name": "repeatingwindowratio_model",
            "x-displayName": "RepeatingWindowRatio",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RepeatingWindowRatio\" />\n"
        },
        {
            "name": "residential_model",
            "x-displayName": "Residential",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Residential\" />\n"
        },
        {
            "name": "residentialequipmenttype_model",
            "x-displayName": "ResidentialEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ResidentialEquipmentType\" />\n"
        },
        {
            "name": "roofceilingconstructionset_model",
            "x-displayName": "RoofCeilingConstructionSet",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoofCeilingConstructionSet\" />\n"
        },
        {
            "name": "roofceilingconstructionsetabridged_model",
            "x-displayName": "RoofCeilingConstructionSetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoofCeilingConstructionSetAbridged\" />\n"
        },
        {
            "name": "room2d_model",
            "x-displayName": "Room2D",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room2D\" />\n"
        },
        {
            "name": "room2denergypropertiesabridged_model",
            "x-displayName": "Room2DEnergyPropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room2DEnergyPropertiesAbridged\" />\n"
        },
        {
            "name": "room2dpropertiesabridged_model",
            "x-displayName": "Room2DPropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room2DPropertiesAbridged\" />\n"
        },
        {
            "name": "roughness_model",
            "x-displayName": "Roughness",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Roughness\" />\n"
        },
        {
            "name": "scheduleday_model",
            "x-displayName": "ScheduleDay",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleDay\" />\n"
        },
        {
            "name": "schedulefixedinterval_model",
            "x-displayName": "ScheduleFixedInterval",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleFixedInterval\" />\n"
        },
        {
            "name": "schedulefixedintervalabridged_model",
            "x-displayName": "ScheduleFixedIntervalAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleFixedIntervalAbridged\" />\n"
        },
        {
            "name": "schedulenumerictype_model",
            "x-displayName": "ScheduleNumericType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleNumericType\" />\n"
        },
        {
            "name": "scheduleruleabridged_model",
            "x-displayName": "ScheduleRuleAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRuleAbridged\" />\n"
        },
        {
            "name": "scheduleruleset_model",
            "x-displayName": "ScheduleRuleset",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRuleset\" />\n"
        },
        {
            "name": "schedulerulesetabridged_model",
            "x-displayName": "ScheduleRulesetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRulesetAbridged\" />\n"
        },
        {
            "name": "scheduletypelimit_model",
            "x-displayName": "ScheduleTypeLimit",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleTypeLimit\" />\n"
        },
        {
            "name": "scheduleunittype_model",
            "x-displayName": "ScheduleUnitType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleUnitType\" />\n"
        },
        {
            "name": "servicehotwater_model",
            "x-displayName": "ServiceHotWater",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ServiceHotWater\" />\n"
        },
        {
            "name": "servicehotwaterabridged_model",
            "x-displayName": "ServiceHotWaterAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ServiceHotWaterAbridged\" />\n"
        },
        {
            "name": "setpoint_model",
            "x-displayName": "Setpoint",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Setpoint\" />\n"
        },
        {
            "name": "setpointabridged_model",
            "x-displayName": "SetpointAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SetpointAbridged\" />\n"
        },
        {
            "name": "shadeconstruction_model",
            "x-displayName": "ShadeConstruction",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeConstruction\" />\n"
        },
        {
            "name": "simplewindowratio_model",
            "x-displayName": "SimpleWindowRatio",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SimpleWindowRatio\" />\n"
        },
        {
            "name": "singlewindow_model",
            "x-displayName": "SingleWindow",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SingleWindow\" />\n"
        },
        {
            "name": "slatorientation_model",
            "x-displayName": "SlatOrientation",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SlatOrientation\" />\n"
        },
        {
            "name": "story_model",
            "x-displayName": "Story",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Story\" />\n"
        },
        {
            "name": "storyenergypropertiesabridged_model",
            "x-displayName": "StoryEnergyPropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/StoryEnergyPropertiesAbridged\" />\n"
        },
        {
            "name": "storypropertiesabridged_model",
            "x-displayName": "StoryPropertiesAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/StoryPropertiesAbridged\" />\n"
        },
        {
            "name": "surface_model",
            "x-displayName": "Surface",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Surface\" />\n"
        },
        {
            "name": "units_model",
            "x-displayName": "Units",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Units\" />\n"
        },
        {
            "name": "vav_model",
            "x-displayName": "VAV",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VAV\" />\n"
        },
        {
            "name": "vavequipmenttype_model",
            "x-displayName": "VAVEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VAVEquipmentType\" />\n"
        },
        {
            "name": "vrf_model",
            "x-displayName": "VRF",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRF\" />\n"
        },
        {
            "name": "vrfequipmenttype_model",
            "x-displayName": "VRFEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRFEquipmentType\" />\n"
        },
        {
            "name": "vrfwithdoasabridged_model",
            "x-displayName": "VRFwithDOASAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRFwithDOASAbridged\" />\n"
        },
        {
            "name": "vrfwithdoasequipmenttype_model",
            "x-displayName": "VRFwithDOASEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRFwithDOASEquipmentType\" />\n"
        },
        {
            "name": "ventilation_model",
            "x-displayName": "Ventilation",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Ventilation\" />\n"
        },
        {
            "name": "ventilationabridged_model",
            "x-displayName": "VentilationAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationAbridged\" />\n"
        },
        {
            "name": "ventilationcontrolabridged_model",
            "x-displayName": "VentilationControlAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationControlAbridged\" />\n"
        },
        {
            "name": "ventilationopening_model",
            "x-displayName": "VentilationOpening",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationOpening\" />\n"
        },
        {
            "name": "vintages_model",
            "x-displayName": "Vintages",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Vintages\" />\n"
        },
        {
            "name": "wshp_model",
            "x-displayName": "WSHP",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHP\" />\n"
        },
        {
            "name": "wshpequipmenttype_model",
            "x-displayName": "WSHPEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHPEquipmentType\" />\n"
        },
        {
            "name": "wshpwithdoasabridged_model",
            "x-displayName": "WSHPwithDOASAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHPwithDOASAbridged\" />\n"
        },
        {
            "name": "wshpwithdoasequipmenttype_model",
            "x-displayName": "WSHPwithDOASEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHPwithDOASEquipmentType\" />\n"
        },
        {
            "name": "wallconstructionset_model",
            "x-displayName": "WallConstructionSet",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WallConstructionSet\" />\n"
        },
        {
            "name": "wallconstructionsetabridged_model",
            "x-displayName": "WallConstructionSetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WallConstructionSetAbridged\" />\n"
        },
        {
            "name": "windowac_model",
            "x-displayName": "WindowAC",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowAC\" />\n"
        },
        {
            "name": "windowacequipmenttype_model",
            "x-displayName": "WindowACEquipmentType",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowACEquipmentType\" />\n"
        },
        {
            "name": "windowconstruction_model",
            "x-displayName": "WindowConstruction",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstruction\" />\n"
        },
        {
            "name": "windowconstructionabridged_model",
            "x-displayName": "WindowConstructionAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstructionAbridged\" />\n"
        },
        {
            "name": "_allairbase_model",
            "x-displayName": "_AllAirBase",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_AllAirBase\" />\n"
        },
        {
            "name": "_doasbase_model",
            "x-displayName": "_DOASBase",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_DOASBase\" />\n"
        },
        {
            "name": "_equipmentbase_model",
            "x-displayName": "_EquipmentBase",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_EquipmentBase\" />\n"
        },
        {
            "name": "_facesubset_model",
            "x-displayName": "_FaceSubSet",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_FaceSubSet\" />\n"
        },
        {
            "name": "_facesubsetabridged_model",
            "x-displayName": "_FaceSubSetAbridged",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_FaceSubSetAbridged\" />\n"
        },
        {
            "name": "_heatcoolbase_model",
            "x-displayName": "_HeatCoolBase",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_HeatCoolBase\" />\n"
        },
        {
            "name": "_louversbase_model",
            "x-displayName": "_LouversBase",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_LouversBase\" />\n"
        },
        {
            "name": "_openapigenbasemodel_model",
            "x-displayName": "_OpenAPIGenBaseModel",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_OpenAPIGenBaseModel\" />\n"
        },
        {
            "name": "_templatesystem_model",
            "x-displayName": "_TemplateSystem",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/_TemplateSystem\" />\n"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Models",
            "tags": [
                "_allairbase_model",
                "_doasbase_model",
                "_equipmentbase_model",
                "_facesubset_model",
                "_facesubsetabridged_model",
                "_heatcoolbase_model",
                "_louversbase_model",
                "_openapigenbasemodel_model",
                "_templatesystem_model",
                "adiabatic_model",
                "airboundaryconstruction_model",
                "airboundaryconstructionabridged_model",
                "allaireconomizertype_model",
                "apertureconstructionset_model",
                "apertureconstructionsetabridged_model",
                "autocalculate_model",
                "autosize_model",
                "baseboard_model",
                "baseboardequipmenttype_model",
                "building_model",
                "buildingenergypropertiesabridged_model",
                "buildingpropertiesabridged_model",
                "constructionset_model",
                "constructionsetabridged_model",
                "contextshade_model",
                "contextshadeenergypropertiesabridged_model",
                "contextshadepropertiesabridged_model",
                "datedbasemodel_model",
                "detailedwindows_model",
                "doorconstructionset_model",
                "doorconstructionsetabridged_model",
                "economizertype_model",
                "electricequipment_model",
                "electricequipmentabridged_model",
                "energymaterial_model",
                "energymaterialnomass_model",
                "energywindowmaterialblind_model",
                "energywindowmaterialgas_model",
                "energywindowmaterialgascustom_model",
                "energywindowmaterialgasmixture_model",
                "energywindowmaterialglazing_model",
                "energywindowmaterialshade_model",
                "energywindowmaterialsimpleglazsys_model",
                "evaporativecooler_model",
                "evaporativecoolerequipmenttype_model",
                "extrudedborder_model",
                "face3d_model",
                "fcu_model",
                "fcuequipmenttype_model",
                "fcuwithdoasabridged_model",
                "fcuwithdoasequipmenttype_model",
                "floorconstructionset_model",
                "floorconstructionsetabridged_model",
                "forcedairfurnace_model",
                "furnaceequipmenttype_model",
                "gasequipment_model",
                "gasequipmentabridged_model",
                "gastype_model",
                "gasunitheater_model",
                "gasunitheaterequipmenttype_model",
                "ground_model",
                "iddbasemodel_model",
                "iddenergybasemodel_model",
                "idealairsystemabridged_model",
                "infiltration_model",
                "infiltrationabridged_model",
                "lighting_model",
                "lightingabridged_model",
                "louversbycount_model",
                "louversbydistance_model",
                "model_model",
                "modelenergyproperties_model",
                "modelproperties_model",
                "nolimit_model",
                "opaqueconstruction_model",
                "opaqueconstructionabridged_model",
                "outdoors_model",
                "overhang_model",
                "people_model",
                "peopleabridged_model",
                "plane_model",
                "programtype_model",
                "programtypeabridged_model",
                "psz_model",
                "pszequipmenttype_model",
                "ptac_model",
                "ptacequipmenttype_model",
                "pvav_model",
                "pvavequipmenttype_model",
                "rectangularwindows_model",
                "repeatingwindowratio_model",
                "residential_model",
                "residentialequipmenttype_model",
                "roofceilingconstructionset_model",
                "roofceilingconstructionsetabridged_model",
                "room2d_model",
                "room2denergypropertiesabridged_model",
                "room2dpropertiesabridged_model",
                "roughness_model",
                "scheduleday_model",
                "schedulefixedinterval_model",
                "schedulefixedintervalabridged_model",
                "schedulenumerictype_model",
                "scheduleruleabridged_model",
                "scheduleruleset_model",
                "schedulerulesetabridged_model",
                "scheduletypelimit_model",
                "scheduleunittype_model",
                "servicehotwater_model",
                "servicehotwaterabridged_model",
                "setpoint_model",
                "setpointabridged_model",
                "shadeconstruction_model",
                "simplewindowratio_model",
                "singlewindow_model",
                "slatorientation_model",
                "story_model",
                "storyenergypropertiesabridged_model",
                "storypropertiesabridged_model",
                "surface_model",
                "units_model",
                "vav_model",
                "vavequipmenttype_model",
                "ventilation_model",
                "ventilationabridged_model",
                "ventilationcontrolabridged_model",
                "ventilationopening_model",
                "vintages_model",
                "vrf_model",
                "vrfequipmenttype_model",
                "vrfwithdoasabridged_model",
                "vrfwithdoasequipmenttype_model",
                "wallconstructionset_model",
                "wallconstructionsetabridged_model",
                "windowac_model",
                "windowacequipmenttype_model",
                "windowconstruction_model",
                "windowconstructionabridged_model",
                "wshp_model",
                "wshpequipmenttype_model",
                "wshpwithdoasabridged_model",
                "wshpwithdoasequipmenttype_model"
            ]
        }
    ],
    "paths": {},
    "components": {
        "schemas": {
            "ScheduleFixedIntervalAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "values"
                        ],
                        "properties": {
                            "values": {
                                "title": "Values",
                                "description": "A list of timeseries values occuring at each timestep over the course of the simulation.",
                                "minItems": 24,
                                "maxItems": 527040,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "ScheduleFixedIntervalAbridged",
                                "pattern": "^ScheduleFixedIntervalAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "schedule_type_limit": {
                                "title": "Schedule Type Limit",
                                "description": "Identifier of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "timestep": {
                                "title": "Timestep",
                                "description": "An integer for the number of steps per hour that the input values correspond to.  For example, if each value represents 30 minutes, the timestep is 2. For 15 minutes, it is 4.",
                                "default": 1,
                                "type": "integer",
                                "format": "int32"
                            },
                            "start_date": {
                                "title": "Start Date",
                                "description": "A list of two integers for [month, day], representing the start date when the schedule values begin to take effect.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
                                "default": [
                                    1,
                                    1
                                ],
                                "minItems": 2,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "placeholder_value": {
                                "title": "Placeholder Value",
                                "description": " A value that will be used for all times not covered by the input values. Typically, your simulation should not need to use this value if the input values completely cover the simulation period.",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "interpolate": {
                                "title": "Interpolate",
                                "description": "Boolean to note whether values in between intervals should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ScheduleFixedIntervalAbridged",
                "description": "Used to specify a start date and a list of values for a period of analysis.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EnergyWindowMaterialGasCustom": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "conductivity_coeff_a",
                            "viscosity_coeff_a",
                            "specific_heat_coeff_a",
                            "specific_heat_ratio",
                            "molecular_weight"
                        ],
                        "properties": {
                            "conductivity_coeff_a": {
                                "title": "Conductivity Coeff A",
                                "description": "The A coefficient for gas conductivity in W/(m-K).",
                                "type": "number",
                                "format": "double"
                            },
                            "viscosity_coeff_a": {
                                "title": "Viscosity Coeff A",
                                "description": "The A coefficient for gas viscosity in kg/(m-s).",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "specific_heat_coeff_a": {
                                "title": "Specific Heat Coeff A",
                                "description": "The A coefficient for gas specific heat in J/(kg-K).",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "specific_heat_ratio": {
                                "title": "Specific Heat Ratio",
                                "description": "The specific heat ratio for gas.",
                                "exclusiveMinimum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "molecular_weight": {
                                "title": "Molecular Weight",
                                "description": "The molecular weight for gas in g/mol.",
                                "minimum": 20,
                                "maximum": 200,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "EnergyWindowMaterialGasCustom",
                                "pattern": "^EnergyWindowMaterialGasCustom$",
                                "type": "string",
                                "readOnly": true
                            },
                            "thickness": {
                                "title": "Thickness",
                                "description": "Thickness of the gas layer in meters. Default value is 0.0125.",
                                "default": 0.0125,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "conductivity_coeff_b": {
                                "title": "Conductivity Coeff B",
                                "description": "The B coefficient for gas conductivity in W/(m-K2).",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "conductivity_coeff_c": {
                                "title": "Conductivity Coeff C",
                                "description": "The C coefficient for gas conductivity in W/(m-K3).",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "viscosity_coeff_b": {
                                "title": "Viscosity Coeff B",
                                "description": "The B coefficient for gas viscosity in kg/(m-s-K).",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "viscosity_coeff_c": {
                                "title": "Viscosity Coeff C",
                                "description": "The C coefficient for gas viscosity in kg/(m-s-K2).",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "specific_heat_coeff_b": {
                                "title": "Specific Heat Coeff B",
                                "description": "The B coefficient for gas specific heat in J/(kg-K2).",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "specific_heat_coeff_c": {
                                "title": "Specific Heat Coeff C",
                                "description": "The C coefficient for gas specific heat in J/(kg-K3).",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyWindowMaterialGasCustom",
                "description": "Create single layer of custom gas.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EnergyWindowMaterialGlazing": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "EnergyWindowMaterialGlazing",
                                "pattern": "^EnergyWindowMaterialGlazing$",
                                "type": "string",
                                "readOnly": true
                            },
                            "thickness": {
                                "title": "Thickness",
                                "description": "The surface-to-surface of the glass in meters. Default value is 0.003.",
                                "default": 0.003,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "solar_transmittance": {
                                "title": "Solar Transmittance",
                                "description": "Transmittance of solar radiation through the glass at normal incidence. Default value is 0.85 for clear glass.",
                                "default": 0.85,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "solar_reflectance": {
                                "title": "Solar Reflectance",
                                "description": "Reflectance of solar radiation off of the front side of the glass at normal incidence, averaged over the solar spectrum. Default value is 0.075 for clear glass.",
                                "default": 0.075,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "solar_reflectance_back": {
                                "title": "Solar Reflectance Back",
                                "description": "Reflectance of solar radiation off of the back side of the glass at normal incidence, averaged over the solar spectrum.",
                                "type": "number",
                                "format": "double"
                            },
                            "visible_transmittance": {
                                "title": "Visible Transmittance",
                                "description": "Transmittance of visible light through the glass at normal incidence. Default value is 0.9 for clear glass.",
                                "default": 0.9,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "visible_reflectance": {
                                "title": "Visible Reflectance",
                                "description": "Reflectance of visible light off of the front side of the glass at normal incidence. Default value is 0.075 for clear glass.",
                                "default": 0.075,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "visible_reflectance_back": {
                                "title": "Visible Reflectance Back",
                                "description": "Reflectance of visible light off of the back side of the glass at normal incidence averaged over the solar spectrum and weighted by the response of the human eye.",
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "infrared_transmittance": {
                                "title": "Infrared Transmittance",
                                "description": "Long-wave transmittance at normal incidence.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "emissivity": {
                                "title": "Emissivity",
                                "description": "Infrared hemispherical emissivity of the front (outward facing) side of the glass.  Default value is 0.84, which is typical for clear glass without a low-e coating.",
                                "default": 0.84,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "emissivity_back": {
                                "title": "Emissivity Back",
                                "description": "Infrared hemispherical emissivity of the back (inward facing) side of the glass.  Default value is 0.84, which is typical for clear glass without a low-e coating.",
                                "default": 0.84,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "conductivity": {
                                "title": "Conductivity",
                                "description": "Thermal conductivity of the glass in W/(m-K). Default value is 0.9, which is  typical for clear glass without a low-e coating.",
                                "default": 0.9,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "dirt_correction": {
                                "title": "Dirt Correction",
                                "description": "Factor that corrects for the presence of dirt on the glass. A default value of 1 indicates the glass is clean.",
                                "default": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "solar_diffusing": {
                                "title": "Solar Diffusing",
                                "description": "Takes values True and False. If False (default), the beam solar radiation incident on the glass is transmitted as beam radiation with no diffuse component.If True, the beam  solar radiation incident on the glass is transmitted as hemispherical diffuse radiation with no beam component.",
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyWindowMaterialGlazing",
                "description": "Describe a single glass pane corresponding to a layer in a window construction.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "FloorConstructionSetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_FaceSubSetAbridged"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "FloorConstructionSetAbridged",
                                "pattern": "^FloorConstructionSetAbridged$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "FloorConstructionSetAbridged",
                "description": "A set of constructions for floor assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "GasType": {
                "title": "GasType",
                "description": "An enumeration.",
                "enum": [
                    "Air",
                    "Argon",
                    "Krypton",
                    "Xenon"
                ],
                "type": "string"
            },
            "EnergyWindowMaterialGas": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "EnergyWindowMaterialGas",
                                "pattern": "^EnergyWindowMaterialGas$",
                                "type": "string",
                                "readOnly": true
                            },
                            "thickness": {
                                "title": "Thickness",
                                "description": "Thickness of the gas layer in meters. Default value is 0.0125.",
                                "default": 0.0125,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "gas_type": {
                                "default": "Air",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/GasType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyWindowMaterialGas",
                "description": "Create single layer of gas in a window construction.\n\nCan be combined with EnergyWindowMaterialGlazing to make multi-pane windows.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ScheduleDay": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "values"
                        ],
                        "properties": {
                            "values": {
                                "title": "Values",
                                "description": "A list of floats or integers for the values of the schedule. The length of this list must match the length of the times list.",
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "ScheduleDay",
                                "pattern": "^ScheduleDay$",
                                "type": "string",
                                "readOnly": true
                            },
                            "times": {
                                "title": "Times",
                                "description": "A list of lists with each sub-list possesing 2 values for [hour, minute]. The length of the master list must match the length of the values list. Each time in the master list represents the time of day that the corresponding value begins to take effect. For example [(0,0), (9,0), (17,0)] in combination with the values [0, 1, 0] denotes a schedule value of 0 from 0:00 to 9:00, a value of 1 from 9:00 to 17:00 and 0 from 17:00 to the end of the day. Note that this representation of times as the \"time of beginning\" is a different convention than EnergyPlus, which uses \"time until\".",
                                "default": [
                                    0,
                                    0
                                ],
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "minItems": 2,
                                    "maxItems": 2
                                }
                            },
                            "interpolate": {
                                "title": "Interpolate",
                                "description": "Boolean to note whether values in between times should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ScheduleDay",
                "description": "Used to describe the daily schedule for a single simulation day.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ScheduleRuleAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DatedBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "schedule_day"
                        ],
                        "properties": {
                            "schedule_day": {
                                "title": "Schedule Day",
                                "description": "The identifier of a ScheduleDay object associated with this rule.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "ScheduleRuleAbridged",
                                "pattern": "^ScheduleRuleAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "apply_sunday": {
                                "title": "Apply Sunday",
                                "description": "Boolean noting whether to apply schedule_day on Sundays.",
                                "default": false,
                                "type": "boolean"
                            },
                            "apply_monday": {
                                "title": "Apply Monday",
                                "description": "Boolean noting whether to apply schedule_day on Mondays.",
                                "default": false,
                                "type": "boolean"
                            },
                            "apply_tuesday": {
                                "title": "Apply Tuesday",
                                "description": "Boolean noting whether to apply schedule_day on Tuesdays.",
                                "default": false,
                                "type": "boolean"
                            },
                            "apply_wednesday": {
                                "title": "Apply Wednesday",
                                "description": "Boolean noting whether to apply schedule_day on Wednesdays.",
                                "default": false,
                                "type": "boolean"
                            },
                            "apply_thursday": {
                                "title": "Apply Thursday",
                                "description": "Boolean noting whether to apply schedule_day on Thursdays.",
                                "default": false,
                                "type": "boolean"
                            },
                            "apply_friday": {
                                "title": "Apply Friday",
                                "description": "Boolean noting whether to apply schedule_day on Fridays.",
                                "default": false,
                                "type": "boolean"
                            },
                            "apply_saturday": {
                                "title": "Apply Saturday",
                                "description": "Boolean noting whether to apply schedule_day on Saturdays.",
                                "default": false,
                                "type": "boolean"
                            },
                            "start_date": {
                                "title": "Start Date",
                                "description": "A list of two integers for [month, day], representing the start date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
                                "default": [
                                    1,
                                    1
                                ],
                                "minItems": 2,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "end_date": {
                                "title": "End Date",
                                "description": "A list of two integers for [month, day], representing the end date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
                                "default": [
                                    12,
                                    31
                                ],
                                "minItems": 2,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ScheduleRuleAbridged",
                "description": "Schedule rule including a ScheduleDay and when it should be applied..",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ScheduleRulesetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "day_schedules",
                            "default_day_schedule"
                        ],
                        "properties": {
                            "day_schedules": {
                                "title": "Day Schedules",
                                "description": "A list of ScheduleDays that are referenced in the other keys of this ScheduleRulesetAbridged.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ScheduleDay"
                                }
                            },
                            "default_day_schedule": {
                                "title": "Default Day Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for all days when no ScheduleRule is applied. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "ScheduleRulesetAbridged",
                                "pattern": "^ScheduleRulesetAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "schedule_rules": {
                                "title": "Schedule Rules",
                                "description": "A list of ScheduleRuleAbridged that note exceptions to the default_day_schedule. These rules should be ordered from highest to lowest priority.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ScheduleRuleAbridged"
                                }
                            },
                            "holiday_schedule": {
                                "title": "Holiday Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for holidays. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "summer_designday_schedule": {
                                "title": "Summer Designday Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for the summer design day. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "winter_designday_schedule": {
                                "title": "Winter Designday Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for the winter design day. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "schedule_type_limit": {
                                "title": "Schedule Type Limit",
                                "description": "Identifier of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ScheduleRulesetAbridged",
                "description": "Used to define a schedule for a default day, further described by ScheduleRule.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Vintages": {
                "title": "Vintages",
                "description": "An enumeration.",
                "enum": [
                    "ASHRAE_2013",
                    "ASHRAE_2010",
                    "ASHRAE_2007",
                    "ASHRAE_2004",
                    "DOE_Ref_1980_2004",
                    "DOE_Ref_Pre_1980"
                ],
                "type": "string"
            },
            "AllAirEconomizerType": {
                "title": "AllAirEconomizerType",
                "description": "An enumeration.",
                "enum": [
                    "NoEconomizer",
                    "DifferentialDryBulb",
                    "DifferentialEnthalpy",
                    "DifferentialDryBulbAndEnthalpy",
                    "FixedDryBulb",
                    "FixedEnthalpy",
                    "ElectronicEnthalpy"
                ],
                "type": "string"
            },
            "PVAVEquipmentType": {
                "title": "PVAVEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "PVAV_Boiler",
                    "PVAV_ASHP",
                    "PVAV_DHW",
                    "PVAV_PFP",
                    "PVAV_BoilerElectricReheat"
                ],
                "type": "string"
            },
            "PVAV": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "economizer_type": {
                                "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
                                "default": "NoEconomizer",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AllAirEconomizerType"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "type": {
                                "title": "Type",
                                "default": "PVAV",
                                "pattern": "^PVAV$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the VAVEquipmentType enumeration.",
                                "default": "PVAV_Boiler",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/PVAVEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "PVAV",
                "description": "Packaged Variable Air Volume (PVAV) HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "NoLimit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "NoLimit",
                                "pattern": "^NoLimit$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "NoLimit",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ScheduleNumericType": {
                "title": "ScheduleNumericType",
                "description": "Designates how the range values are validated.",
                "enum": [
                    "Continuous",
                    "Discrete"
                ],
                "type": "string"
            },
            "ScheduleUnitType": {
                "title": "ScheduleUnitType",
                "description": "An enumeration.",
                "enum": [
                    "Dimensionless",
                    "Temperature",
                    "DeltaTemperature",
                    "PrecipitationRate",
                    "Angle",
                    "ConvectionCoefficient",
                    "ActivityLevel",
                    "Velocity",
                    "Capacity",
                    "Power",
                    "Availability",
                    "Percent",
                    "Control",
                    "Mode"
                ],
                "type": "string"
            },
            "ScheduleTypeLimit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ScheduleTypeLimit",
                                "pattern": "^ScheduleTypeLimit$",
                                "type": "string",
                                "readOnly": true
                            },
                            "lower_limit": {
                                "title": "Lower Limit",
                                "description": "Lower limit for the schedule type or NoLimit.",
                                "default": {
                                    "type": "NoLimit"
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/NoLimit"
                                    },
                                    {
                                        "type": "number",
                                        "format": "double"
                                    }
                                ]
                            },
                            "upper_limit": {
                                "title": "Upper Limit",
                                "description": "Upper limit for the schedule type or NoLimit.",
                                "default": {
                                    "type": "NoLimit"
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/NoLimit"
                                    },
                                    {
                                        "type": "number",
                                        "format": "double"
                                    }
                                ]
                            },
                            "numeric_type": {
                                "default": "Continuous",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleNumericType"
                                    }
                                ]
                            },
                            "unit_type": {
                                "default": "Dimensionless",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleUnitType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ScheduleTypeLimit",
                "description": "Specifies the data types and limits for values contained in schedules.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ScheduleRuleset": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "day_schedules",
                            "default_day_schedule"
                        ],
                        "properties": {
                            "day_schedules": {
                                "title": "Day Schedules",
                                "description": "A list of ScheduleDays that are referenced in the other keys of this ScheduleRulesetAbridged.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ScheduleDay"
                                }
                            },
                            "default_day_schedule": {
                                "title": "Default Day Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for all days when no ScheduleRule is applied. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "ScheduleRuleset",
                                "pattern": "^ScheduleRuleset$",
                                "type": "string",
                                "readOnly": true
                            },
                            "schedule_rules": {
                                "title": "Schedule Rules",
                                "description": "A list of ScheduleRuleAbridged that note exceptions to the default_day_schedule. These rules should be ordered from highest to lowest priority.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ScheduleRuleAbridged"
                                }
                            },
                            "holiday_schedule": {
                                "title": "Holiday Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for holidays. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "summer_designday_schedule": {
                                "title": "Summer Designday Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for the summer design day. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "winter_designday_schedule": {
                                "title": "Winter Designday Schedule",
                                "description": "An identifier for the ScheduleDay that will be used for the winter design day. This ScheduleDay must be in the day_schedules.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "schedule_type_limit": {
                                "title": "Schedule Type Limit",
                                "description": "ScheduleTypeLimit object that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleTypeLimit"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ScheduleRuleset",
                "description": "Used to define a schedule for a default day, further described by ScheduleRule.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ScheduleFixedInterval": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "values"
                        ],
                        "properties": {
                            "values": {
                                "title": "Values",
                                "description": "A list of timeseries values occuring at each timestep over the course of the simulation.",
                                "minItems": 24,
                                "maxItems": 527040,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "ScheduleFixedInterval",
                                "pattern": "^ScheduleFixedInterval$",
                                "type": "string",
                                "readOnly": true
                            },
                            "schedule_type_limit": {
                                "title": "Schedule Type Limit",
                                "description": "ScheduleTypeLimit object that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleTypeLimit"
                                    }
                                ]
                            },
                            "timestep": {
                                "title": "Timestep",
                                "description": "An integer for the number of steps per hour that the input values correspond to.  For example, if each value represents 30 minutes, the timestep is 2. For 15 minutes, it is 4.",
                                "default": 1,
                                "type": "integer",
                                "format": "int32"
                            },
                            "start_date": {
                                "title": "Start Date",
                                "description": "A list of two integers for [month, day], representing the start date when the schedule values begin to take effect.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
                                "default": [
                                    1,
                                    1
                                ],
                                "minItems": 2,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "placeholder_value": {
                                "title": "Placeholder Value",
                                "description": " A value that will be used for all times not covered by the input values. Typically, your simulation should not need to use this value if the input values completely cover the simulation period.",
                                "default": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "interpolate": {
                                "title": "Interpolate",
                                "description": "Boolean to note whether values in between intervals should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ScheduleFixedInterval",
                "description": "Used to specify a start date and a list of values for a period of analysis.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Ventilation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Ventilation",
                                "pattern": "^Ventilation$",
                                "type": "string",
                                "readOnly": true
                            },
                            "flow_per_person": {
                                "title": "Flow Per Person",
                                "description": "Intensity of ventilation in[] m3/s per person]. Note that setting this value does not mean that ventilation is varied based on real-time occupancy but rather that the design level of ventilation is determined using this value and the People object of the Room.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "flow_per_area": {
                                "title": "Flow Per Area",
                                "description": "Intensity of ventilation in [m3/s per m2 of floor area].",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "air_changes_per_hour": {
                                "title": "Air Changes Per Hour",
                                "description": "Intensity of ventilation in air changes per hour (ACH) for the entire Room.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "flow_per_zone": {
                                "title": "Flow Per Zone",
                                "description": "Intensity of ventilation in m3/s for the entire Room.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "Schedule for the ventilation over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the total design flow rate (determined from the sum of the other 4 fields) to yield a complete ventilation profile.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Ventilation",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ContextShadeEnergyPropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ContextShadeEnergyPropertiesAbridged",
                                "pattern": "^ContextShadeEnergyPropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "construction": {
                                "title": "Construction",
                                "description": "Name of a ShadeConstruction to set the reflectance and specularity of the ContextShade. If None, the the EnergyPlus default of 0.2 diffuse reflectance will be used.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "transmittance_schedule": {
                                "title": "Transmittance Schedule",
                                "description": "Name of a schedule to set the transmittance of the ContextShade, which can vary throughout the simulation. If None, the ContextShade will be completely opaque.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ContextShadeEnergyPropertiesAbridged",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ContextShadePropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ContextShadePropertiesAbridged",
                                "pattern": "^ContextShadePropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "energy": {
                                "$ref": "#/components/schemas/ContextShadeEnergyPropertiesAbridged"
                            }
                        }
                    }
                ],
                "title": "ContextShadePropertiesAbridged",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Roughness": {
                "title": "Roughness",
                "description": "Relative roughness of a particular material layer.",
                "enum": [
                    "VeryRough",
                    "Rough",
                    "MediumRough",
                    "MediumSmooth",
                    "Smooth",
                    "VerySmooth"
                ],
                "type": "string"
            },
            "EnergyMaterial": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "thickness",
                            "conductivity",
                            "density",
                            "specific_heat"
                        ],
                        "properties": {
                            "thickness": {
                                "title": "Thickness",
                                "description": "Thickness of the material layer in meters.",
                                "exclusiveMinimum": 0,
                                "maximum": 3,
                                "type": "number",
                                "format": "double"
                            },
                            "conductivity": {
                                "title": "Conductivity",
                                "description": "Thermal conductivity of the material layer in W/(m-K).",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "density": {
                                "title": "Density",
                                "description": "Density of the material layer in kg/m3.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "specific_heat": {
                                "title": "Specific Heat",
                                "description": "Specific heat of the material layer in J/(kg-K).",
                                "minimum": 100,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "EnergyMaterial",
                                "pattern": "^EnergyMaterial$",
                                "type": "string",
                                "readOnly": true
                            },
                            "roughness": {
                                "default": "MediumRough",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Roughness"
                                    }
                                ]
                            },
                            "thermal_absorptance": {
                                "title": "Thermal Absorptance",
                                "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default value is 0.9.",
                                "default": 0.9,
                                "exclusiveMinimum": 0,
                                "maximum": 0.99999,
                                "type": "number",
                                "format": "double"
                            },
                            "solar_absorptance": {
                                "title": "Solar Absorptance",
                                "description": "Fraction of incident solar radiation absorbed by the material. Default value is 0.7.",
                                "default": 0.7,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "visible_absorptance": {
                                "title": "Visible Absorptance",
                                "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default value is 0.7.",
                                "default": 0.7,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyMaterial",
                "description": "Opaque material representing a layer within an opaque construction.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EnergyMaterialNoMass": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "r_value"
                        ],
                        "properties": {
                            "r_value": {
                                "title": "R Value",
                                "description": "The thermal resistance (R-value) of the material layer [m2-K/W].",
                                "minimum": 0.001,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "EnergyMaterialNoMass",
                                "pattern": "^EnergyMaterialNoMass$",
                                "type": "string",
                                "readOnly": true
                            },
                            "roughness": {
                                "default": "MediumRough",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Roughness"
                                    }
                                ]
                            },
                            "thermal_absorptance": {
                                "title": "Thermal Absorptance",
                                "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default value is 0.9.",
                                "default": 0.9,
                                "exclusiveMinimum": 0,
                                "maximum": 0.99999,
                                "type": "number",
                                "format": "double"
                            },
                            "solar_absorptance": {
                                "title": "Solar Absorptance",
                                "description": "Fraction of incident solar radiation absorbed by the material. Default value is 0.7.",
                                "default": 0.7,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "visible_absorptance": {
                                "title": "Visible Absorptance",
                                "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default value is 0.7.",
                                "default": 0.7,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyMaterialNoMass",
                "description": "No mass opaque material representing a layer within an opaque construction.\n\nUsed when only the thermal resistance (R value) of the material is known.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "OpaqueConstruction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "materials"
                        ],
                        "properties": {
                            "materials": {
                                "title": "Materials",
                                "description": "List of opaque material definitions. The order of the materials is from exterior to interior.",
                                "minItems": 1,
                                "maxItems": 10,
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EnergyMaterial"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyMaterialNoMass"
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "OpaqueConstruction",
                                "pattern": "^OpaqueConstruction$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "OpaqueConstruction",
                "description": "Construction for opaque objects (Face, Shade, Door).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "RoofCeilingConstructionSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "exterior_construction": {
                                "title": "Exterior Construction",
                                "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "ground_construction": {
                                "title": "Ground Construction",
                                "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "RoofCeilingConstructionSet",
                                "pattern": "^RoofCeilingConstructionSet$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "RoofCeilingConstructionSet",
                "description": "A set of constructions for roof and ceiling assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ResidentialEquipmentType": {
                "title": "ResidentialEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "ResidentialAC_ElectricBaseboard",
                    "ResidentialAC_BoilerBaseboard",
                    "ResidentialAC_ASHPBaseboard",
                    "ResidentialAC_DHWBaseboard",
                    "ResidentialAC_ResidentialFurnace",
                    "ResidentialAC",
                    "ResidentialHP",
                    "ResidentialHPNoCool",
                    "ResidentialFurnace"
                ],
                "type": "string"
            },
            "Residential": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Residential",
                                "pattern": "^Residential$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the ResidentialEquipmentType enumeration.",
                                "default": "ResidentialAC_ElectricBaseboard",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ResidentialEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Residential",
                "description": "Residential Air Conditioning, Heat Pump or Furnace system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WallConstructionSetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_FaceSubSetAbridged"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "WallConstructionSetAbridged",
                                "pattern": "^WallConstructionSetAbridged$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "WallConstructionSetAbridged",
                "description": "A set of constructions for wall assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "RoofCeilingConstructionSetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_FaceSubSetAbridged"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "RoofCeilingConstructionSetAbridged",
                                "pattern": "^RoofCeilingConstructionSetAbridged$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "RoofCeilingConstructionSetAbridged",
                "description": "A set of constructions for roof and ceiling assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ApertureConstructionSetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ApertureConstructionSetAbridged",
                                "pattern": "^ApertureConstructionSetAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "Identifier for a WindowConstruction for apertures with an Outdoors boundary condition, False is_operable property, and a Wall face type for their parent face.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "window_construction": {
                                "title": "Window Construction",
                                "description": "Identifier for a WindowConstruction for all apertures with a Surface boundary condition.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "skylight_construction": {
                                "title": "Skylight Construction",
                                "description": "Identifier for a WindowConstruction for apertures with a Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "operable_construction": {
                                "title": "Operable Construction",
                                "description": "Identifier for a WindowConstruction for all apertures with an Outdoors boundary condition and True is_operable property.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ApertureConstructionSetAbridged",
                "description": "A set of constructions for aperture assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "DoorConstructionSetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "DoorConstructionSetAbridged",
                                "pattern": "^DoorConstructionSetAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "Identifier for an OpaqueConstruction for all opaque doors with a Surface boundary condition.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "exterior_construction": {
                                "title": "Exterior Construction",
                                "description": "Identifier for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a Wall face type for their parent face.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "overhead_construction": {
                                "title": "Overhead Construction",
                                "description": "Identifier for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a RoofCeiling or Floor type for their parent face.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "exterior_glass_construction": {
                                "title": "Exterior Glass Construction",
                                "description": "Identifier for a WindowConstruction for all glass doors with an Outdoors boundary condition.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "interior_glass_construction": {
                                "title": "Interior Glass Construction",
                                "description": "Identifier for a WindowConstruction for all glass doors with a Surface boundary condition.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "DoorConstructionSetAbridged",
                "description": "A set of constructions for door assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ConstructionSetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ConstructionSetAbridged",
                                "pattern": "^ConstructionSetAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "wall_set": {
                                "title": "Wall Set",
                                "description": "A WallConstructionSetAbridged object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WallConstructionSetAbridged"
                                    }
                                ]
                            },
                            "floor_set": {
                                "title": "Floor Set",
                                "description": "A FloorConstructionSetAbridged object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/FloorConstructionSetAbridged"
                                    }
                                ]
                            },
                            "roof_ceiling_set": {
                                "title": "Roof Ceiling Set",
                                "description": "A RoofCeilingConstructionSetAbridged object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/RoofCeilingConstructionSetAbridged"
                                    }
                                ]
                            },
                            "aperture_set": {
                                "title": "Aperture Set",
                                "description": "A ApertureConstructionSetAbridged object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ApertureConstructionSetAbridged"
                                    }
                                ]
                            },
                            "door_set": {
                                "title": "Door Set",
                                "description": "A DoorConstructionSetAbridged object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/DoorConstructionSetAbridged"
                                    }
                                ]
                            },
                            "shade_construction": {
                                "title": "Shade Construction",
                                "description": "The identifier of a ShadeConstruction to set the reflectance properties of all outdoor shades of all objects to which this ConstructionSet is assigned.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "air_boundary_construction": {
                                "title": "Air Boundary Construction",
                                "description": "The identifier of an AirBoundaryConstruction to set the properties of Faces with an AirBoundary type.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ConstructionSetAbridged",
                "description": "A set of constructions for different surface types and boundary conditions.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Autocalculate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Autocalculate",
                                "pattern": "^Autocalculate$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Autocalculate",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "GasEquipmentAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_EquipmentBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "GasEquipmentAbridged",
                                "pattern": "^GasEquipmentAbridged$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "GasEquipmentAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Plane": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "n": {
                                "title": "N",
                                "description": "Plane normal as 3 (x, y, z) values.",
                                "minItems": 3,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "o": {
                                "title": "O",
                                "description": "Plane origin as 3 (x, y, z) values",
                                "minItems": 3,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "Plane",
                                "pattern": "^Plane$",
                                "type": "string",
                                "readOnly": true
                            },
                            "x": {
                                "title": "X",
                                "description": "Plane x-axis as 3 (x, y, z) values. If None, it is autocalculated.",
                                "minItems": 3,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                        },
                        "required": [
                            "n",
                            "o"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "Plane",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Face3D": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "boundary": {
                                "title": "Boundary",
                                "description": "A list of points representing the outer boundary vertices of the face. The list should include at least 3 points and each point should be a list of 3 (x, y, z) values.",
                                "minItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "minItems": 3,
                                    "maxItems": 3
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "Face3D",
                                "pattern": "^Face3D$",
                                "type": "string",
                                "readOnly": true
                            },
                            "holes": {
                                "title": "Holes",
                                "description": "Optional list of lists with one list for each hole in the face.Each hole should be a list of at least 3 points and each point a list of 3 (x, y, z) values. If None, it will be assumed that there are no holes in the face.",
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "format": "double"
                                        },
                                        "minItems": 3,
                                        "maxItems": 3
                                    },
                                    "minItems": 3
                                }
                            },
                            "plane": {
                                "title": "Plane",
                                "description": "Optional Plane indicating the plane in which the face exists.If None, the plane will usually be derived from the boundary points.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Plane"
                                    }
                                ]
                            }
                        },
                        "required": [
                            "boundary"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "Face3D",
                "description": "A single planar face in 3D space.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ContextShade": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "geometry",
                            "properties"
                        ],
                        "properties": {
                            "geometry": {
                                "title": "Geometry",
                                "description": "An array of planar Face3Ds that together represent the context shade.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Face3D"
                                }
                            },
                            "properties": {
                                "title": "Properties",
                                "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ContextShadePropertiesAbridged"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "ContextShade",
                                "pattern": "^ContextShade$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ContextShade",
                "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "PTACEquipmentType": {
                "title": "PTACEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "PTAC_ElectricBaseboard",
                    "PTAC_BoilerBaseboard",
                    "PTAC_DHWBaseboard",
                    "PTAC_GasHeaters",
                    "PTAC_ElectricCoil",
                    "PTAC_GasCoil",
                    "PTAC_Boiler",
                    "PTAC_ASHP",
                    "PTAC_DHW",
                    "PTAC",
                    "PTHP"
                ],
                "type": "string"
            },
            "PTAC": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "PTAC",
                                "pattern": "^PTAC$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the PTACEquipmentType enumeration.",
                                "default": "PTAC_ElectricBaseboard",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/PTACEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "PTAC",
                "description": "Packaged Terminal Air Conditioning (PTAC) or Heat Pump (PTHP) HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ShadeConstruction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ShadeConstruction",
                                "pattern": "^ShadeConstruction$",
                                "type": "string",
                                "readOnly": true
                            },
                            "solar_reflectance": {
                                "title": "Solar Reflectance",
                                "description": "A number for the solar reflectance of the construction.",
                                "default": 0.2,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "visible_reflectance": {
                                "title": "Visible Reflectance",
                                "description": "A number for the visible reflectance of the construction.",
                                "default": 0.2,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "is_specular": {
                                "title": "Is Specular",
                                "description": "Boolean to note whether the reflection off the shade is diffuse (False) or specular (True). Set to True if the construction is representing a glass facade or a mirror material.",
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ShadeConstruction",
                "description": "Construction for Shade objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "SimpleWindowRatio": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "window_ratio": {
                                "title": "Window Ratio",
                                "description": "A number between 0 and 1 for the ratio between the window area and the parent wall surface area.",
                                "exclusiveMinimum": 0,
                                "exclusiveMaximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "SimpleWindowRatio",
                                "pattern": "^SimpleWindowRatio$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "window_ratio"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "SimpleWindowRatio",
                "description": "A single window defined by an area ratio with the base surface.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Overhang": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "depth": {
                                "title": "Depth",
                                "description": "A number for the overhang depth.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "Overhang",
                                "pattern": "^Overhang$",
                                "type": "string",
                                "readOnly": true
                            },
                            "angle": {
                                "title": "Angle",
                                "description": "A number between -90 and 90 for the for an angle to rotate the overhang in degrees. 0 indicates an overhang perpendicular to the wall. Positive values indicate a downward rotation. Negative values indicate an upward rotation.",
                                "default": 0,
                                "minimum": -90,
                                "maximum": 90,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "required": [
                            "depth"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "Overhang",
                "description": "A single overhang over an entire wall.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "VentilationOpening": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "VentilationOpening",
                                "pattern": "^VentilationOpening$",
                                "type": "string",
                                "readOnly": true
                            },
                            "fraction_area_operable": {
                                "title": "Fraction Area Operable",
                                "description": "A number for the fraction of the window area that is operable.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "fraction_height_operable": {
                                "title": "Fraction Height Operable",
                                "description": "A number for the fraction of the distance from the bottom of the window to the top that is operable",
                                "default": 1.0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "discharge_coefficient": {
                                "title": "Discharge Coefficient",
                                "description": "A number that will be multipled by the area of the window in the stack (buoyancy-driven) part of the equation to account for additional friction from window geometry, insect screens, etc. Typical values include 0.45, for unobstructed windows WITH insect screens and 0.65 for unobstructed windows WITHOUT insect screens. This value should be lowered if windows are of an awning or casement type and are not allowed to fully open.",
                                "default": 0.45,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "wind_cross_vent": {
                                "title": "Wind Cross Vent",
                                "description": "Boolean to indicate if there is an opening of roughly equal area on the opposite side of the Room such that wind-driven cross ventilation will be induced. If False, the assumption is that the operable area is primarily on one side of the Room and there is no wind-driven ventilation.",
                                "default": false,
                                "type": "boolean"
                            },
                            "flow_coefficient_closed": {
                                "title": "Flow Coefficient Closed",
                                "description": "An optional number in kg/s-m, at 1 Pa per meter of crack length, used to calculate the mass flow rate when the opening is closed; required to run an AirflowNetwork simulation. The DesignBuilder Cracks template defines the flow coefficient for a tight, low-leakage closed external window to be 0.00001, and the flow coefficient for a very poor, high-leakage closed external window to be 0.003.",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "flow_exponent_closed": {
                                "title": "Flow Exponent Closed",
                                "description": "An optional dimensionless number between 0.5 and 1 used to calculate the mass flow rate when the opening is closed; required to run an AirflowNetwork simulation. This value represents the leak geometry impact on airflow, with 0.5 generally corresponding to turbulent orifice flow and 1 generally corresponding to laminar flow. The default of 0.65 is representative of many cases of wall and window leakage, used when the exponent cannot be measured.",
                                "default": 0.65,
                                "minimum": 0.5,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "two_way_threshold": {
                                "title": "Two Way Threshold",
                                "description": "A number in kg/m3 indicating the minimum density difference above which two-way flow may occur due to stack effect, required to run an AirflowNetwork simulation. This value is required because the air density difference between two zones (which drives two-way air flow) will tend towards division by zero errors as the air density difference approaches zero. The default of 0.0001 is a typical default value used for AirflowNetwork openings.",
                                "default": 0.0001,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "VentilationOpening",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Setpoint": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "cooling_schedule",
                            "heating_schedule"
                        ],
                        "properties": {
                            "cooling_schedule": {
                                "title": "Cooling Schedule",
                                "description": "Schedule for the cooling setpoint. The values in this schedule should be temperature in [C].",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "heating_schedule": {
                                "title": "Heating Schedule",
                                "description": "Schedule for the heating setpoint. The values in this schedule should be temperature in [C].",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Setpoint",
                                "pattern": "^Setpoint$",
                                "type": "string",
                                "readOnly": true
                            },
                            "humidifying_schedule": {
                                "title": "Humidifying Schedule",
                                "description": "Schedule for the humidification setpoint. The values in this schedule should be in [%].",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "dehumidifying_schedule": {
                                "title": "Dehumidifying Schedule",
                                "description": "Schedule for the dehumidification setpoint. The values in this schedule should be in [%].",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Setpoint",
                "description": "Used to specify information about the setpoint schedule.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ExtrudedBorder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "depth": {
                                "title": "Depth",
                                "description": "A number for the depth of the border.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "ExtrudedBorder",
                                "pattern": "^ExtrudedBorder$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "depth"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "ExtrudedBorder",
                "description": "Extruded borders over all windows in the wall.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "People": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "people_per_area",
                            "occupancy_schedule",
                            "activity_schedule"
                        ],
                        "properties": {
                            "people_per_area": {
                                "title": "People Per Area",
                                "description": "People per floor area expressed as [people/m2]",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "occupancy_schedule": {
                                "title": "Occupancy Schedule",
                                "description": "A schedule for the occupancy over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the people_per_area to yield a complete occupancy profile.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "activity_schedule": {
                                "title": "Activity Schedule",
                                "description": "A schedule for the activity of the occupants over the course of the year. The type of this schedule should be Power and the values of the schedule equal to the number of Watts given off by an individual person in the room.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "People",
                                "pattern": "^People$",
                                "type": "string",
                                "readOnly": true
                            },
                            "radiant_fraction": {
                                "title": "Radiant Fraction",
                                "description": "The radiant fraction of sensible heat released by people. (Default: 0.3).",
                                "default": 0.3,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_fraction": {
                                "title": "Latent Fraction",
                                "description": "Number for the latent fraction of heat gain due to people or an Autocalculate object.",
                                "default": {
                                    "type": "Autocalculate"
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Autocalculate"
                                    },
                                    {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "format": "double"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "People",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "LouversByDistance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_LouversBase"
                    },
                    {
                        "type": "object",
                        "required": [
                            "distance"
                        ],
                        "properties": {
                            "distance": {
                                "title": "Distance",
                                "description": "A number for the approximate distance between each louver.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "LouversByDistance",
                                "pattern": "^LouversByDistance$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "LouversByDistance",
                "description": "A series of louvered Shades at a given distance between each louver.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AirBoundaryConstruction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "air_mixing_schedule"
                        ],
                        "properties": {
                            "air_mixing_schedule": {
                                "title": "Air Mixing Schedule",
                                "description": "A fractional schedule as a ScheduleRuleset or ScheduleFixedInterval for the air mixing schedule across the construction.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "AirBoundaryConstruction",
                                "pattern": "^AirBoundaryConstruction$",
                                "type": "string",
                                "readOnly": true
                            },
                            "air_mixing_per_area": {
                                "title": "Air Mixing Per Area",
                                "description": "A positive number for the amount of air mixing between Rooms across the air boundary surface [m3/s-m2]. Default: 0.1 corresponds to average indoor air speeds of 0.1 m/s (roughly 20 fpm), which is typical of what would be induced by a HVAC system.",
                                "default": 0.1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "AirBoundaryConstruction",
                "description": "Construction for Air Boundary objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Ground": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Ground",
                                "pattern": "^Ground$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Ground",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Outdoors": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Outdoors",
                                "pattern": "^Outdoors$",
                                "type": "string",
                                "readOnly": true
                            },
                            "sun_exposure": {
                                "title": "Sun Exposure",
                                "description": "A boolean noting whether the boundary is exposed to sun.",
                                "default": true,
                                "type": "boolean"
                            },
                            "wind_exposure": {
                                "title": "Wind Exposure",
                                "description": "A boolean noting whether the boundary is exposed to wind.",
                                "default": true,
                                "type": "boolean"
                            },
                            "view_factor": {
                                "title": "View Factor",
                                "description": "A number for the view factor to the ground. This can also be an Autocalculate object to have the view factor automatically calculated.",
                                "default": {
                                    "type": "Autocalculate"
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Autocalculate"
                                    },
                                    {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "format": "double"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Outdoors",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Adiabatic": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Adiabatic",
                                "pattern": "^Adiabatic$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Adiabatic",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Surface": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "boundary_condition_objects": {
                                "title": "Boundary Condition Objects",
                                "description": "A list of up to 3 object identifiers that are adjacent to this one. The first object is always the one that is immediately adjacent and is of the same object type (Face, Aperture, Door). When this boundary condition is applied to a Face, the second object in the tuple will be the parent Room of the adjacent object. When the boundary condition is applied to a sub-face (Door or Aperture), the second object will be the parent Face of the adjacent sub-face and the third object will be the parent Room of the adjacent sub-face.",
                                "minItems": 2,
                                "maxItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "Surface",
                                "pattern": "^Surface$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "boundary_condition_objects"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "Surface",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "SingleWindow": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "width": {
                                "title": "Width",
                                "description": "A number for the window width. Note that, if this width is applied to a wall that is too narrow for this width, the generated window will automatically be shortened when it is applied to the wall. In this way, setting the width to be `float(\"inf\")` will create parameters that always generate a ribbon window.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "height": {
                                "title": "Height",
                                "description": "A number for the window height. Note that, if this height is applied to a wall that is too short for this height, the generated window will automatically be shortened when it is applied to the wall.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "SingleWindow",
                                "pattern": "^SingleWindow$",
                                "type": "string",
                                "readOnly": true
                            },
                            "sill_height": {
                                "title": "Sill Height",
                                "description": "A number for the window sill height.",
                                "default": 1.0,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "required": [
                            "width",
                            "height"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "SingleWindow",
                "description": "A single window in the wall center defined by a width * height.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "RepeatingWindowRatio": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "window_ratio": {
                                "title": "Window Ratio",
                                "description": "A number between 0 and 1 for the ratio between the window area and the parent wall surface area.",
                                "exclusiveMinimum": 0,
                                "exclusiveMaximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "window_height": {
                                "title": "Window Height",
                                "description": "A number for the target height of the windows. Note that, if the window ratio is too large for the height, the ratio will take precedence and the actual window_height will be larger than this value.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "sill_height": {
                                "title": "Sill Height",
                                "description": "A number for the target height above the bottom edge of the wall to start the windows. Note that, if the ratio is too large for the height, the ratio will take precedence and the sill_height will be smaller than this value.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "horizontal_separation": {
                                "title": "Horizontal Separation",
                                "description": "A number for the target separation between individual window centerlines.  If this number is larger than the parent rectangle base, only one window will be produced.",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "RepeatingWindowRatio",
                                "pattern": "^RepeatingWindowRatio$",
                                "type": "string",
                                "readOnly": true
                            },
                            "vertical_separation": {
                                "title": "Vertical Separation",
                                "description": "An optional number to create a single vertical separation between top and bottom windows.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "required": [
                            "window_ratio",
                            "window_height",
                            "sill_height",
                            "horizontal_separation"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "RepeatingWindowRatio",
                "description": "Repeating windows derived from an area ratio with the base wall.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "RectangularWindows": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "origins": {
                                "title": "Origins",
                                "description": "An array of 2D points within the plane of the wall for the origin of each window. Each point should be a list of 2 (x, y) values. The wall plane is assumed to have an origin at the first point of the wall segment and an X-axis extending along the length of the segment. The wall plane Y-axis always points upwards. Therefore, both X and Y values of each origin point should be positive.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "exclusiveMinimum": 0,
                                        "format": "double"
                                    },
                                    "minItems": 2,
                                    "maxItems": 2
                                }
                            },
                            "widths": {
                                "title": "Widths",
                                "description": "An array of positive numbers for the window widths. The length of this list must match the length of the origins.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "exclusiveMinimum": 0,
                                    "format": "double"
                                }
                            },
                            "heights": {
                                "title": "Heights",
                                "description": "An array of positive numbers for the window heights. The length of this list must match the length of the origins.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "exclusiveMinimum": 0,
                                    "format": "double"
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "RectangularWindows",
                                "pattern": "^RectangularWindows$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "origins",
                            "widths",
                            "heights"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "RectangularWindows",
                "description": "Several rectangular windows, defined by origin, width and height.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "DetailedWindows": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "polygons": {
                                "title": "Polygons",
                                "description": "An array of arrays with each sub-array representing a polygonal boundary of a window within the plane of the wall. Each sub-array should consist of at least three 2D points and each point should be a list of 2 (x, y) values. The wall plane is assumed to have an origin at the first point of the wall segment and an X-axis extending along the length of the segment. The wall plane Y-axis always points upwards. Therefore, both X and Y values of each point in the polygon should always be positive. Note that, if you are starting from 3D vertices of windows, you can use these window parameters to represent them. Some sample code to convert from 2D vertices to 2D vertices in the plane of the wall can be found here: https://www.ladybug.tools/dragonfly-core/docs/dragonfly.windowparameter.html#dragonfly.windowparameter.DetailedWindows",
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "exclusiveMinimum": 0,
                                            "format": "double"
                                        },
                                        "minItems": 2,
                                        "maxItems": 2
                                    },
                                    "minItems": 3
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "DetailedWindows",
                                "pattern": "^DetailedWindows$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "polygons"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "DetailedWindows",
                "description": "Several detailed windows defined by 2D Polygons (lists of 2D vertices).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "LouversByCount": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_LouversBase"
                    },
                    {
                        "type": "object",
                        "required": [
                            "louver_count"
                        ],
                        "properties": {
                            "louver_count": {
                                "title": "Louver Count",
                                "description": "A positive integer for the number of louvers to generate.",
                                "exclusiveMinimum": 0,
                                "type": "integer",
                                "format": "int32"
                            },
                            "type": {
                                "title": "Type",
                                "default": "LouversByCount",
                                "pattern": "^LouversByCount$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "LouversByCount",
                "description": "A specific number of louvered Shades over a wall.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "VentilationControlAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "VentilationControlAbridged",
                                "pattern": "^VentilationControlAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "min_indoor_temperature": {
                                "title": "Min Indoor Temperature",
                                "description": "A number for the minimum indoor temperature at which to ventilate in Celsius. Typically, this variable is used to initiate ventilation.",
                                "default": -100,
                                "minimum": -100,
                                "maximum": 100,
                                "type": "number",
                                "format": "double"
                            },
                            "max_indoor_temperature": {
                                "title": "Max Indoor Temperature",
                                "description": "A number for the maximum indoor temperature at which to ventilate in Celsius. This can be used to set a maximum temperature at which point ventilation is stopped and a cooling system is turned on.",
                                "default": 100,
                                "minimum": -100,
                                "maximum": 100,
                                "type": "number",
                                "format": "double"
                            },
                            "min_outdoor_temperature": {
                                "title": "Min Outdoor Temperature",
                                "description": "A number for the minimum outdoor temperature at which to ventilate in Celsius. This can be used to ensure ventilative cooling does not happen during the winter even if the Room is above the min_indoor_temperature.",
                                "default": -100,
                                "minimum": -100,
                                "maximum": 100,
                                "type": "number",
                                "format": "double"
                            },
                            "max_outdoor_temperature": {
                                "title": "Max Outdoor Temperature",
                                "description": "A number for the maximum indoor temperature at which to ventilate in Celsius. This can be used to set a limit for when it is considered too hot outside for ventilative cooling.",
                                "default": 100,
                                "minimum": -100,
                                "maximum": 100,
                                "type": "number",
                                "format": "double"
                            },
                            "delta_temperature": {
                                "title": "Delta Temperature",
                                "description": "A number for the temperature differential in Celsius between indoor and outdoor below which ventilation is shut off.  This should usually be a positive number so that ventilation only occurs when the outdoors is cooler than the indoors. Negative numbers indicate how much hotter the outdoors can be than the indoors before ventilation is stopped.",
                                "default": -100,
                                "minimum": -100,
                                "maximum": 100,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "Identifier of the schedule for the ventilation over the course of the year. Note that this is applied on top of any setpoints. The type of this schedule should be On/Off and values should be either 0 (no possibility of ventilation) or 1 (ventilation possible).",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "VentilationControlAbridged",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Room2DEnergyPropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Room2DEnergyPropertiesAbridged",
                                "pattern": "^Room2DEnergyPropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "construction_set": {
                                "title": "Construction Set",
                                "description": "Name of a ConstructionSet to specify all constructions for the Room2D. If None, the Room2D will use the Story or Building construction_set or the Model global_construction_set. Any ConstructionSet assigned here will override those assigned to these objects.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "program_type": {
                                "title": "Program Type",
                                "description": "Name of a ProgramType to specify all schedules and loads for the Room2D. If None, the Room2D will have no loads or setpoints.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "hvac": {
                                "title": "Hvac",
                                "description": "An optional identifier of a HVAC system (such as an IdealAirSystem) that specifies how the Room2D is conditioned. If None, it will be assumed that the Room2D is not conditioned.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "window_vent_control": {
                                "title": "Window Vent Control",
                                "description": "An optional VentilationControl object to dictate the opening of windows. If None, the windows will never open.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/VentilationControlAbridged"
                                    }
                                ]
                            },
                            "window_vent_opening": {
                                "title": "Window Vent Opening",
                                "description": "An optional VentilationOpening to specify the operable portion of all windows of the Room2D. If None, the windows will never open.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/VentilationOpening"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Room2DEnergyPropertiesAbridged",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Room2DPropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Room2DPropertiesAbridged",
                                "pattern": "^Room2DPropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "energy": {
                                "$ref": "#/components/schemas/Room2DEnergyPropertiesAbridged"
                            }
                        }
                    }
                ],
                "title": "Room2DPropertiesAbridged",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Room2D": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "floor_boundary",
                            "floor_height",
                            "floor_to_ceiling_height",
                            "properties"
                        ],
                        "properties": {
                            "floor_boundary": {
                                "title": "Floor Boundary",
                                "description": "A list of 2D points representing the outer boundary vertices of the Room2D. The list should include at least 3 points and each point should be a list of 2 (x, y) values.",
                                "minItems": 3,
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "minItems": 2,
                                    "maxItems": 2
                                }
                            },
                            "floor_height": {
                                "title": "Floor Height",
                                "description": "A number to indicate the height of the floor plane in the Z axis.",
                                "type": "number",
                                "format": "double"
                            },
                            "floor_to_ceiling_height": {
                                "title": "Floor To Ceiling Height",
                                "description": "A number for the distance between the floor and the ceiling.",
                                "type": "number",
                                "format": "double"
                            },
                            "properties": {
                                "title": "Properties",
                                "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Room2DPropertiesAbridged"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Room2D",
                                "pattern": "^Room2D$",
                                "type": "string",
                                "readOnly": true
                            },
                            "floor_holes": {
                                "title": "Floor Holes",
                                "description": "Optional list of lists with one list for each hole in the floor plate. Each hole should be a list of at least 2 points and each point a list of 2 (x, y) values. If None, it will be assumed that there are no holes in the floor plate.",
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "format": "double"
                                        },
                                        "minItems": 2,
                                        "maxItems": 2
                                    },
                                    "minItems": 3
                                }
                            },
                            "is_ground_contact": {
                                "title": "Is Ground Contact",
                                "description": "A boolean noting whether this Room2D has its floor in contact with the ground.",
                                "default": false,
                                "type": "boolean"
                            },
                            "is_top_exposed": {
                                "title": "Is Top Exposed",
                                "description": "A boolean noting whether this Room2D has its ceiling exposed to the outdoors.",
                                "default": false,
                                "type": "boolean"
                            },
                            "boundary_conditions": {
                                "title": "Boundary Conditions",
                                "description": "A list of boundary conditions that match the number of segments in the input floor_geometry + floor_holes. These will be used to assign boundary conditions to each of the walls of the Room in the resulting model. Their order should align with the order of segments in the floor_boundary and then with each hole segment. If None, all boundary conditions will be Outdoors or Ground depending on whether ceiling height of the room is at or below 0 (the assumed ground plane).",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/Ground"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Outdoors"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Adiabatic"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Surface"
                                        }
                                    ]
                                }
                            },
                            "window_parameters": {
                                "title": "Window Parameters",
                                "description": "A list of WindowParameter objects that dictate how the window geometries will be generated for each of the walls. If None, no windows will exist over the entire Room2D.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/SingleWindow"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SimpleWindowRatio"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RepeatingWindowRatio"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RectangularWindows"
                                        },
                                        {
                                            "$ref": "#/components/schemas/DetailedWindows"
                                        }
                                    ]
                                }
                            },
                            "shading_parameters": {
                                "title": "Shading Parameters",
                                "description": "A list of ShadingParameter objects that dictate how the shade geometries will be generated for each of the walls. If None, no shades will exist over the entire Room2D.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ExtrudedBorder"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Overhang"
                                        },
                                        {
                                            "$ref": "#/components/schemas/LouversByDistance"
                                        },
                                        {
                                            "$ref": "#/components/schemas/LouversByCount"
                                        }
                                    ]
                                }
                            },
                            "air_boundaries": {
                                "title": "Air Boundaries",
                                "description": "A list of booleans for whether each wall has an air boundary type. False values indicate a standard opaque type while True values indicate an AirBoundary type. All walls will be False by default. Note that any walls with a True air boundary must have a Surface boundary condition without any windows.",
                                "type": "array",
                                "items": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Room2D",
                "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "StoryEnergyPropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "StoryEnergyPropertiesAbridged",
                                "pattern": "^StoryEnergyPropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "construction_set": {
                                "title": "Construction Set",
                                "description": "Name of a ConstructionSet to specify all constructions for the Story. If None, the Story will use the Building construction_set or the Model global_construction_set. Any ConstructionSet assigned here will override those assigned to these objects.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "StoryEnergyPropertiesAbridged",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "StoryPropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "StoryPropertiesAbridged",
                                "pattern": "^StoryPropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "energy": {
                                "$ref": "#/components/schemas/StoryEnergyPropertiesAbridged"
                            }
                        }
                    }
                ],
                "title": "StoryPropertiesAbridged",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Story": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "room_2ds",
                            "properties"
                        ],
                        "properties": {
                            "room_2ds": {
                                "title": "Room 2Ds",
                                "description": "An array of dragonfly Room2D objects that together form an entire story of a building.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Room2D"
                                }
                            },
                            "properties": {
                                "title": "Properties",
                                "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/StoryPropertiesAbridged"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Story",
                                "pattern": "^Story$",
                                "type": "string",
                                "readOnly": true
                            },
                            "floor_to_floor_height": {
                                "title": "Floor To Floor Height",
                                "description": "A number for the distance from the floor plate of this story to the floor of the story above this one (if it exists). If None, this value will be the maximum floor_to_ceiling_height of the input room_2ds.",
                                "type": "number",
                                "format": "double"
                            },
                            "floor_height": {
                                "title": "Floor Height",
                                "description": "A number to indicate the height of the floor plane in the Z axis.If None, this will be the minimum floor height of all the room_2ds, which is suitable for cases where there are no floor plenums.",
                                "type": "number",
                                "format": "double"
                            },
                            "multiplier": {
                                "title": "Multiplier",
                                "description": "An integer that denotes the number of times that this Story is repeated over the height of the building.",
                                "default": 1,
                                "minimum": 1,
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Story",
                "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WSHPEquipmentType": {
                "title": "WSHPEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "WSHP_FluidCooler_Boiler",
                    "WSHP_CoolingTower_Boiler",
                    "WSHP_GSHP",
                    "WSHP_DCW_DHW"
                ],
                "type": "string"
            },
            "WSHP": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "WSHP",
                                "pattern": "^WSHP$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the WSHPEquipmentType enumeration.",
                                "default": "WSHP_FluidCooler_Boiler",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WSHPEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "WSHP",
                "description": "Direct evaporative cooling systems (with optional heating).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "VRFwithDOASEquipmentType": {
                "title": "VRFwithDOASEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "DOAS_VRF"
                ],
                "type": "string"
            },
            "VRFwithDOASAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "doas_availability_schedule": {
                                "title": "Doas Availability Schedule",
                                "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "VRFwithDOASAbridged",
                                "pattern": "^VRFwithDOASAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the VRFwithDOASEquipmentType enumeration.",
                                "default": "DOAS_VRF",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/VRFwithDOASEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "VRFwithDOASAbridged",
                "description": "Variable Refrigerant Flow (VRF) with DOAS HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EnergyWindowMaterialSimpleGlazSys": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "u_factor",
                            "shgc"
                        ],
                        "properties": {
                            "u_factor": {
                                "title": "U Factor",
                                "description": "Used to describe the value for window system U-Factor, or overall heat transfer coefficient in W/(m2-K).",
                                "exclusiveMinimum": 0,
                                "maximum": 5.8,
                                "type": "number",
                                "format": "double"
                            },
                            "shgc": {
                                "title": "Shgc",
                                "description": "Unitless  quantity describing Solar Heat Gain Coefficient for normal incidence and vertical orientation.",
                                "exclusiveMinimum": 0,
                                "exclusiveMaximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "EnergyWindowMaterialSimpleGlazSys",
                                "pattern": "^EnergyWindowMaterialSimpleGlazSys$",
                                "type": "string",
                                "readOnly": true
                            },
                            "vt": {
                                "title": "Vt",
                                "description": "The fraction of visible light falling on the window that makes it through the glass at normal incidence.",
                                "default": 0.54,
                                "exclusiveMinimum": 0,
                                "exclusiveMaximum": 1,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyWindowMaterialSimpleGlazSys",
                "description": "Describe an entire glazing system rather than individual layers.\n\nUsed when only very limited information is available on the glazing layers or when\nspecific performance levels are being targeted.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EnergyWindowMaterialGasMixture": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "gas_types",
                            "gas_fractions"
                        ],
                        "properties": {
                            "gas_types": {
                                "description": "List of gases in the gas mixture.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GasType"
                                },
                                "minItems": 2,
                                "maxItems": 4
                            },
                            "gas_fractions": {
                                "title": "Gas Fractions",
                                "description": "A list of fractional numbers describing the volumetric fractions of gas types in the mixture. This list must align with the gas_types list and must sum to 1.",
                                "minItems": 2,
                                "maxItems": 4,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "EnergyWindowMaterialGasMixture",
                                "pattern": "^EnergyWindowMaterialGasMixture$",
                                "type": "string",
                                "readOnly": true
                            },
                            "thickness": {
                                "title": "Thickness",
                                "description": "The thickness of the gas mixture layer in meters.",
                                "default": 0.0125,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyWindowMaterialGasMixture",
                "description": "Create a mixture of two to four different gases to fill the panes of multiple\npane windows.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WindowConstruction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "materials"
                        ],
                        "properties": {
                            "materials": {
                                "title": "Materials",
                                "description": "List of glazing and gas material definitions. The order of the materials is from exterior to interior. If a SimpleGlazSys material is used, it must be the only material in the construction. For multi-layered constructions, adjacent glass layers must be separated by one and only one gas layer.",
                                "minItems": 1,
                                "maxItems": 8,
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialSimpleGlazSys"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGlazing"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGas"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGasCustom"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGasMixture"
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "WindowConstruction",
                                "pattern": "^WindowConstruction$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "WindowConstruction",
                "description": "Construction for window objects (Aperture, Door).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "DoorConstructionSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "DoorConstructionSet",
                                "pattern": "^DoorConstructionSet$",
                                "type": "string",
                                "readOnly": true
                            },
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "An OpaqueConstruction for all opaque doors with a Surface boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "exterior_construction": {
                                "title": "Exterior Construction",
                                "description": "An OpaqueConstruction for opaque doors with an Outdoors boundary condition and a Wall face type for their parent face.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "overhead_construction": {
                                "title": "Overhead Construction",
                                "description": "An OpaqueConstruction for opaque doors with an Outdoors boundary condition and a RoofCeiling or Floor type for their parent face.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "exterior_glass_construction": {
                                "title": "Exterior Glass Construction",
                                "description": "A WindowConstruction for all glass doors with an Outdoors boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WindowConstruction"
                                    }
                                ]
                            },
                            "interior_glass_construction": {
                                "title": "Interior Glass Construction",
                                "description": "A WindowConstruction for all glass doors with a Surface boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WindowConstruction"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "DoorConstructionSet",
                "description": "A set of constructions for door assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "VAVEquipmentType": {
                "title": "VAVEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "VAV_Chiller_Boiler",
                    "VAV_Chiller_ASHP",
                    "VAV_Chiller_DHW",
                    "VAV_Chiller_PFP",
                    "VAV_Chiller_GasCoil",
                    "VAV_ACChiller_Boiler",
                    "VAV_ACChiller_ASHP",
                    "VAV_ACChiller_DHW",
                    "VAV_ACChiller_PFP",
                    "VAV_ACChiller_GasCoil",
                    "VAV_DCW_Boiler",
                    "VAV_DCW_ASHP",
                    "VAV_DCW_DHW",
                    "VAV_DCW_PFP",
                    "VAV_DCW_GasCoil"
                ],
                "type": "string"
            },
            "VAV": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "economizer_type": {
                                "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
                                "default": "NoEconomizer",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AllAirEconomizerType"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "type": {
                                "title": "Type",
                                "default": "VAV",
                                "pattern": "^VAV$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the VAVEquipmentType enumeration.",
                                "default": "VAV_Chiller_Boiler",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/VAVEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "VAV",
                "description": "Variable Air Volume (VAV) HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Lighting": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "watts_per_area",
                            "schedule"
                        ],
                        "properties": {
                            "watts_per_area": {
                                "title": "Watts Per Area",
                                "description": "Lighting per floor area as [W/m2].",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "The schedule for the use of lights over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete lighting profile.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Lighting",
                                "pattern": "^Lighting$",
                                "type": "string",
                                "readOnly": true
                            },
                            "visible_fraction": {
                                "title": "Visible Fraction",
                                "description": "The fraction of heat from lights that goes into the zone as visible (short-wave) radiation. (Default: 0.25).",
                                "default": 0.25,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "radiant_fraction": {
                                "title": "Radiant Fraction",
                                "description": "The fraction of heat from lights that is long-wave radiation. (Default: 0.32).",
                                "default": 0.32,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "return_air_fraction": {
                                "title": "Return Air Fraction",
                                "description": "The fraction of the heat from lights that goes into the zone return air. (Default: 0).",
                                "default": 0.0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "baseline_watts_per_area": {
                                "title": "Baseline Watts Per Area",
                                "description": "The baseline lighting power density in [W/m2] of floor area. This baseline is useful to track how much better the installed lights are in comparison to a standard like ASHRAE 90.1. If set to None, it will default to 11.84029 W/m2, which is that ASHRAE 90.1-2004 baseline for an office.",
                                "default": 11.84029,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Lighting",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ElectricEquipment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "watts_per_area",
                            "schedule"
                        ],
                        "properties": {
                            "watts_per_area": {
                                "title": "Watts Per Area",
                                "description": "Equipment level per floor area as [W/m2].",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "The schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "radiant_fraction": {
                                "title": "Radiant Fraction",
                                "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_fraction": {
                                "title": "Latent Fraction",
                                "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "lost_fraction": {
                                "title": "Lost Fraction",
                                "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "ElectricEquipment",
                                "pattern": "^ElectricEquipment$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ElectricEquipment",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "GasEquipment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "watts_per_area",
                            "schedule"
                        ],
                        "properties": {
                            "watts_per_area": {
                                "title": "Watts Per Area",
                                "description": "Equipment level per floor area as [W/m2].",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "The schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "radiant_fraction": {
                                "title": "Radiant Fraction",
                                "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_fraction": {
                                "title": "Latent Fraction",
                                "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "lost_fraction": {
                                "title": "Lost Fraction",
                                "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "GasEquipment",
                                "pattern": "^GasEquipment$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "GasEquipment",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ServiceHotWater": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "flow_per_area",
                            "schedule"
                        ],
                        "properties": {
                            "flow_per_area": {
                                "title": "Flow Per Area",
                                "description": "Number for the total volume flow rate of water per unit area of floor [L/h-m2].",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "The schedule for the use of hot water over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_area to yield a complete water usage profile.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "ServiceHotWater",
                                "pattern": "^ServiceHotWater$",
                                "type": "string",
                                "readOnly": true
                            },
                            "target_temperature": {
                                "title": "Target Temperature",
                                "description": "Number for the target temperature of water out of the tap (C). This the temperature after hot water has been mixed with cold water from the water mains. The default is 60C, which essentially assumes that the flow_per_area on this object is only for water straight out of the water heater.",
                                "default": 60,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "sensible_fraction": {
                                "title": "Sensible Fraction",
                                "description": "A number between 0 and 1 for the fraction of the total hot water load given off as sensible heat in the zone.",
                                "default": 0.2,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_fraction": {
                                "title": "Latent Fraction",
                                "description": "A number between 0 and 1 for the fraction of the total hot water load that is latent.",
                                "default": 0.05,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ServiceHotWater",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Infiltration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "flow_per_exterior_area",
                            "schedule"
                        ],
                        "properties": {
                            "flow_per_exterior_area": {
                                "title": "Flow Per Exterior Area",
                                "description": "Number for the infiltration per exterior surface area in m3/s-m2.",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "The schedule for the infiltration over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_exterior_area to yield a complete infiltration profile.",
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/ScheduleRuleset"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ScheduleFixedInterval"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Infiltration",
                                "pattern": "^Infiltration$",
                                "type": "string",
                                "readOnly": true
                            },
                            "constant_coefficient": {
                                "title": "Constant Coefficient",
                                "default": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "temperature_coefficient": {
                                "title": "Temperature Coefficient",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "velocity_coefficient": {
                                "title": "Velocity Coefficient",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Infiltration",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ProgramType": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ProgramType",
                                "pattern": "^ProgramType$",
                                "type": "string",
                                "readOnly": true
                            },
                            "people": {
                                "title": "People",
                                "description": "People to describe the occupancy of the program. If None, no occupancy will be assumed for the program.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/People"
                                    }
                                ]
                            },
                            "lighting": {
                                "title": "Lighting",
                                "description": "Lighting to describe the lighting usage of the program. If None, no lighting will be assumed for the program.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Lighting"
                                    }
                                ]
                            },
                            "electric_equipment": {
                                "title": "Electric Equipment",
                                "description": "ElectricEquipment to describe the usage of electric equipment within the program. If None, no electric equipment will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ElectricEquipment"
                                    }
                                ]
                            },
                            "gas_equipment": {
                                "title": "Gas Equipment",
                                "description": "GasEquipment to describe the usage of gas equipment within the program. If None, no gas equipment will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/GasEquipment"
                                    }
                                ]
                            },
                            "service_hot_water": {
                                "title": "Service Hot Water",
                                "description": "ServiceHotWater object to describe the usage of hot water within the program. If None, no hot water will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ServiceHotWater"
                                    }
                                ]
                            },
                            "infiltration": {
                                "title": "Infiltration",
                                "description": "Infiltration to describe the outdoor air leakage of the program. If None, no infiltration will be assumed for the program.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Infiltration"
                                    }
                                ]
                            },
                            "ventilation": {
                                "title": "Ventilation",
                                "description": "Ventilation to describe the minimum outdoor air requirement of the program. If None, no ventilation requirement will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Ventilation"
                                    }
                                ]
                            },
                            "setpoint": {
                                "title": "Setpoint",
                                "description": "Setpoint object to describe the temperature and humidity setpoints of the program.  If None, the ProgramType cannot be assigned to a Room that is conditioned.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Setpoint"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ProgramType",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EvaporativeCoolerEquipmentType": {
                "title": "EvaporativeCoolerEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "EvapCoolers_ElectricBaseboard",
                    "EvapCoolers_BoilerBaseboard",
                    "EvapCoolers_ASHPBaseboard",
                    "EvapCoolers_DHWBaseboard",
                    "EvapCoolers_Furnace",
                    "EvapCoolers_UnitHeaters",
                    "EvapCoolers"
                ],
                "type": "string"
            },
            "EvaporativeCooler": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "EvaporativeCooler",
                                "pattern": "^EvaporativeCooler$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the EvaporativeCoolerEquipmentType enumeration.",
                                "default": "EvapCoolers_ElectricBaseboard",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/EvaporativeCoolerEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EvaporativeCooler",
                "description": "Direct evaporative cooling systems (with optional heating).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EnergyWindowMaterialShade": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "EnergyWindowMaterialShade",
                                "pattern": "^EnergyWindowMaterialShade$",
                                "type": "string",
                                "readOnly": true
                            },
                            "solar_transmittance": {
                                "title": "Solar Transmittance",
                                "description": "The transmittance averaged over the solar spectrum. It is assumed independent of incidence angle. Default value is 0.4.",
                                "default": 0.4,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "solar_reflectance": {
                                "title": "Solar Reflectance",
                                "description": "The reflectance averaged over the solar spectrum. It us assumed same on both sides of shade and independent of incidence angle. Default value is 0.5",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "visible_transmittance": {
                                "title": "Visible Transmittance",
                                "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default value is 0.4.",
                                "default": 0.4,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "visible_reflectance": {
                                "title": "Visible Reflectance",
                                "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default value is 0.4",
                                "default": 0.4,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "emissivity": {
                                "title": "Emissivity",
                                "description": "The effective long-wave infrared hemispherical emissivity. It is assumed same on both sides of shade. Default value is 0.9.",
                                "default": 0.9,
                                "exclusiveMinimum": 0,
                                "exclusiveMaximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "infrared_transmittance": {
                                "title": "Infrared Transmittance",
                                "description": "The effective long-wave transmittance. It is assumed independent of incidence angle. Default value is 0.",
                                "default": 0,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "thickness": {
                                "title": "Thickness",
                                "description": "The thickness of the shade material in meters. Default value is 0.005.",
                                "default": 0.005,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "conductivity": {
                                "title": "Conductivity",
                                "description": "The conductivity of the shade material in W/(m-K). Default value is 0.1.",
                                "default": 0.1,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "distance_to_glass": {
                                "title": "Distance To Glass",
                                "description": "The distance from shade to adjacent glass in meters. Default value is 0.05",
                                "default": 0.05,
                                "minimum": 0.001,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "top_opening_multiplier": {
                                "title": "Top Opening Multiplier",
                                "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade. Default value is 0.5.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "bottom_opening_multiplier": {
                                "title": "Bottom Opening Multiplier",
                                "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade. Default value is 0.5.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "left_opening_multiplier": {
                                "title": "Left Opening Multiplier",
                                "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade. Default value is 0.5.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "right_opening_multiplier": {
                                "title": "Right Opening Multiplier",
                                "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade. Default value is 0.5.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "airflow_permeability": {
                                "title": "Airflow Permeability",
                                "description": "The fraction of the shade surface that is open to air flow. If air cannot pass through the shade material, airflow_permeability = 0. Default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 0.8,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyWindowMaterialShade",
                "description": "This object specifies the properties of window shade materials.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "InfiltrationAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "flow_per_exterior_area",
                            "schedule"
                        ],
                        "properties": {
                            "flow_per_exterior_area": {
                                "title": "Flow Per Exterior Area",
                                "description": "Number for the infiltration per exterior surface area in m3/s-m2.",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "Identifier of the schedule for the infiltration over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_exterior_area to yield a complete infiltration profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "InfiltrationAbridged",
                                "pattern": "^InfiltrationAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "constant_coefficient": {
                                "title": "Constant Coefficient",
                                "default": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "temperature_coefficient": {
                                "title": "Temperature Coefficient",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "velocity_coefficient": {
                                "title": "Velocity Coefficient",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "InfiltrationAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "LightingAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "watts_per_area",
                            "schedule"
                        ],
                        "properties": {
                            "watts_per_area": {
                                "title": "Watts Per Area",
                                "description": "Lighting per floor area as [W/m2].",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "Identifier of the schedule for the use of lights over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete lighting profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "LightingAbridged",
                                "pattern": "^LightingAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "visible_fraction": {
                                "title": "Visible Fraction",
                                "description": "The fraction of heat from lights that goes into the zone as visible (short-wave) radiation. (Default: 0.25).",
                                "default": 0.25,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "radiant_fraction": {
                                "title": "Radiant Fraction",
                                "description": "The fraction of heat from lights that is long-wave radiation. (Default: 0.32).",
                                "default": 0.32,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "return_air_fraction": {
                                "title": "Return Air Fraction",
                                "description": "The fraction of the heat from lights that goes into the zone return air. (Default: 0).",
                                "default": 0.0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "baseline_watts_per_area": {
                                "title": "Baseline Watts Per Area",
                                "description": "The baseline lighting power density in [W/m2] of floor area. This baseline is useful to track how much better the installed lights are in comparison to a standard like ASHRAE 90.1. If set to None, it will default to 11.84029 W/m2, which is that ASHRAE 90.1-2004 baseline for an office.",
                                "default": 11.84029,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "LightingAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "OpaqueConstructionAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "materials"
                        ],
                        "properties": {
                            "materials": {
                                "title": "Materials",
                                "description": "List of strings for opaque material identifiers. The order of the materials is from exterior to interior.",
                                "minItems": 1,
                                "maxItems": 10,
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 100
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "OpaqueConstructionAbridged",
                                "pattern": "^OpaqueConstructionAbridged$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "OpaqueConstructionAbridged",
                "description": "Construction for opaque objects (Face, Shade, Door).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "GasUnitHeaterEquipmentType": {
                "title": "GasUnitHeaterEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "GasHeaters"
                ],
                "type": "string"
            },
            "GasUnitHeater": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "GasUnitHeater",
                                "pattern": "^GasUnitHeater$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the GasUnitHeaterEquipmentType enumeration.",
                                "default": "GasHeaters",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/GasUnitHeaterEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "GasUnitHeater",
                "description": "Gas unit heating system. Intended for spaces only requiring heating.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WindowConstructionAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "materials"
                        ],
                        "properties": {
                            "materials": {
                                "title": "Materials",
                                "description": "List of strings for glazing or gas material identifiers. The order of the materials is from exterior to interior. If a SimpleGlazSys material is used, it must be the only material in the construction. For multi-layered constructions, adjacent glass layers must be separated by one and only one gas layer.",
                                "minItems": 1,
                                "maxItems": 8,
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 100
                                }
                            },
                            "type": {
                                "title": "Type",
                                "default": "WindowConstructionAbridged",
                                "pattern": "^WindowConstructionAbridged$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "WindowConstructionAbridged",
                "description": "Construction for window objects (Aperture, Door).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "FloorConstructionSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "exterior_construction": {
                                "title": "Exterior Construction",
                                "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "ground_construction": {
                                "title": "Ground Construction",
                                "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "FloorConstructionSet",
                                "pattern": "^FloorConstructionSet$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "FloorConstructionSet",
                "description": "A set of constructions for floor assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "EconomizerType": {
                "title": "EconomizerType",
                "description": "An enumeration.",
                "enum": [
                    "NoEconomizer",
                    "DifferentialDryBulb",
                    "DifferentialEnthalpy"
                ],
                "type": "string"
            },
            "Autosize": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "Autosize",
                                "pattern": "^Autosize$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Autosize",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "IdealAirSystemAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "IdealAirSystemAbridged",
                                "pattern": "^IdealAirSystemAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "economizer_type": {
                                "description": "Text to indicate the type of air-side economizer used on the ideal air system. Economizers will mix in a greater amount of outdoor air to cool the zone (rather than running the cooling system) when the zone needs cooling and the outdoor air is cooler than the zone.",
                                "default": "DifferentialDryBulb",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/EconomizerType"
                                    }
                                ]
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the zone.",
                                "default": false,
                                "type": "boolean"
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "heating_air_temperature": {
                                "title": "Heating Air Temperature",
                                "description": "A number for the maximum heating supply air temperature [C].",
                                "default": 50,
                                "exclusiveMinimum": 0,
                                "exclusiveMaximum": 100,
                                "type": "number",
                                "format": "double"
                            },
                            "cooling_air_temperature": {
                                "title": "Cooling Air Temperature",
                                "description": "A number for the minimum cooling supply air temperature [C].",
                                "default": 13,
                                "exclusiveMinimum": -100,
                                "exclusiveMaximum": 50,
                                "type": "number",
                                "format": "double"
                            },
                            "heating_limit": {
                                "title": "Heating Limit",
                                "description": "A number for the maximum heating capacity in Watts. This can also be an Autosize object to indicate that the capacity should be determined during the EnergyPlus sizing calculation. This can also be a NoLimit object to indicate no upper limit to the heating capacity.",
                                "default": {
                                    "type": "Autosize"
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Autosize"
                                    },
                                    {
                                        "$ref": "#/components/schemas/NoLimit"
                                    },
                                    {
                                        "type": "number",
                                        "minimum": 0,
                                        "format": "double"
                                    }
                                ]
                            },
                            "cooling_limit": {
                                "title": "Cooling Limit",
                                "description": "A number for the maximum cooling capacity in Watts. This can also be an Autosize object to indicate that the capacity should be determined during the EnergyPlus sizing calculation. This can also be a NoLimit object to indicate no upper limit to the cooling capacity.",
                                "default": {
                                    "type": "Autosize"
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Autosize"
                                    },
                                    {
                                        "$ref": "#/components/schemas/NoLimit"
                                    },
                                    {
                                        "type": "number",
                                        "minimum": 0,
                                        "format": "double"
                                    }
                                ]
                            },
                            "heating_availability": {
                                "title": "Heating Availability",
                                "description": "An optional identifier of a schedule to set the availability of heating over the course of the simulation.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "cooling_availability": {
                                "title": "Cooling Availability",
                                "description": "An optional identifier of a schedule to set the availability of cooling over the course of the simulation.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "IdealAirSystemAbridged",
                "description": "Provides a model for an ideal HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WallConstructionSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "exterior_construction": {
                                "title": "Exterior Construction",
                                "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "ground_construction": {
                                "title": "Ground Construction",
                                "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "WallConstructionSet",
                                "pattern": "^WallConstructionSet$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "WallConstructionSet",
                "description": "A set of constructions for wall assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ApertureConstructionSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ApertureConstructionSet",
                                "pattern": "^ApertureConstructionSet$",
                                "type": "string",
                                "readOnly": true
                            },
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "A WindowConstruction for apertures with an Outdoors boundary condition, False is_operable property, and a Wall face type for their parent face.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WindowConstruction"
                                    }
                                ]
                            },
                            "window_construction": {
                                "title": "Window Construction",
                                "description": "A WindowConstruction for all apertures with a Surface boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WindowConstruction"
                                    }
                                ]
                            },
                            "skylight_construction": {
                                "title": "Skylight Construction",
                                "description": "A WindowConstruction for apertures with a Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WindowConstruction"
                                    }
                                ]
                            },
                            "operable_construction": {
                                "title": "Operable Construction",
                                "description": "A WindowConstruction for all apertures with an Outdoors boundary condition and True is_operable property.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WindowConstruction"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ApertureConstructionSet",
                "description": "A set of constructions for aperture assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ConstructionSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ConstructionSet",
                                "pattern": "^ConstructionSet$",
                                "type": "string",
                                "readOnly": true
                            },
                            "wall_set": {
                                "title": "Wall Set",
                                "description": "A WallConstructionSet object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WallConstructionSet"
                                    }
                                ]
                            },
                            "floor_set": {
                                "title": "Floor Set",
                                "description": "A FloorConstructionSet object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/FloorConstructionSet"
                                    }
                                ]
                            },
                            "roof_ceiling_set": {
                                "title": "Roof Ceiling Set",
                                "description": "A RoofCeilingConstructionSet object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/RoofCeilingConstructionSet"
                                    }
                                ]
                            },
                            "aperture_set": {
                                "title": "Aperture Set",
                                "description": "A ApertureConstructionSet object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ApertureConstructionSet"
                                    }
                                ]
                            },
                            "door_set": {
                                "title": "Door Set",
                                "description": "A DoorConstructionSet object for this ConstructionSet.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/DoorConstructionSet"
                                    }
                                ]
                            },
                            "shade_construction": {
                                "title": "Shade Construction",
                                "description": "A ShadeConstruction to set the reflectance properties of all outdoor shades of all objects to which this ConstructionSet is assigned.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ShadeConstruction"
                                    }
                                ]
                            },
                            "air_boundary_construction": {
                                "title": "Air Boundary Construction",
                                "description": "An AirBoundaryConstruction to set the properties of Faces with an AirBoundary type.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AirBoundaryConstruction"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ConstructionSet",
                "description": "A set of constructions for different surface types and boundary conditions.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AirBoundaryConstructionAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "air_mixing_schedule"
                        ],
                        "properties": {
                            "air_mixing_schedule": {
                                "title": "Air Mixing Schedule",
                                "description": "Identifier of a fractional schedule for the air mixing schedule across the construction.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "AirBoundaryConstructionAbridged",
                                "pattern": "^AirBoundaryConstructionAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "air_mixing_per_area": {
                                "title": "Air Mixing Per Area",
                                "description": "A positive number for the amount of air mixing between Rooms across the air boundary surface [m3/s-m2]. Default: 0.1 corresponds to average indoor air speeds of 0.1 m/s (roughly 20 fpm), which is typical of what would be induced by a HVAC system.",
                                "default": 0.1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "AirBoundaryConstructionAbridged",
                "description": "Construction for Air Boundary objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "SlatOrientation": {
                "title": "SlatOrientation",
                "description": "An enumeration.",
                "enum": [
                    "Horizontal",
                    "Vertical"
                ],
                "type": "string"
            },
            "EnergyWindowMaterialBlind": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "EnergyWindowMaterialBlind",
                                "pattern": "^EnergyWindowMaterialBlind$",
                                "type": "string",
                                "readOnly": true
                            },
                            "slat_orientation": {
                                "default": "Horizontal",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/SlatOrientation"
                                    }
                                ]
                            },
                            "slat_width": {
                                "title": "Slat Width",
                                "description": "The width of slat measured from edge to edge in meters.",
                                "default": 0.025,
                                "exclusiveMinimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "slat_separation": {
                                "title": "Slat Separation",
                                "description": "The distance between the front of a slat and the back of the adjacent slat in meters.",
                                "default": 0.01875,
                                "exclusiveMinimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "slat_thickness": {
                                "title": "Slat Thickness",
                                "description": "The distance between the faces of a slat in meters. The default value is 0.001.",
                                "default": 0.001,
                                "exclusiveMinimum": 0,
                                "maximum": 0.1,
                                "type": "number",
                                "format": "double"
                            },
                            "slat_angle": {
                                "title": "Slat Angle",
                                "description": "The angle (degrees) between the glazing outward normal and the slat outward normal where the outward normal points away from the front face of the slat (degrees). The default value is 45.",
                                "default": 45,
                                "minimum": 0,
                                "maximum": 180,
                                "type": "number",
                                "format": "double"
                            },
                            "slat_conductivity": {
                                "title": "Slat Conductivity",
                                "description": "The thermal conductivity of the slat in W/(m-K). Default value is 221.",
                                "default": 221,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "beam_solar_transmittance": {
                                "title": "Beam Solar Transmittance",
                                "description": "The beam solar transmittance of the slat, assumed to be independent of angle of incidence on the slat. Any transmitted beam radiation is assumed to be 100% diffuse (i.e., slats are translucent). The default value is 0.",
                                "default": 0,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "beam_solar_reflectance": {
                                "title": "Beam Solar Reflectance",
                                "description": "The beam solar reflectance of the front side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "beam_solar_reflectance_back": {
                                "title": "Beam Solar Reflectance Back",
                                "description": "The beam solar reflectance of the back side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "diffuse_solar_transmittance": {
                                "title": "Diffuse Solar Transmittance",
                                "description": "The slat transmittance for hemisperically diffuse solar radiation. Default value is 0.",
                                "default": 0,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "diffuse_solar_reflectance": {
                                "title": "Diffuse Solar Reflectance",
                                "description": "The front-side slat reflectance for hemispherically diffuse solar radiation. Default value is 0.5.",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "diffuse_solar_reflectance_back": {
                                "title": "Diffuse Solar Reflectance Back",
                                "description": "The back-side slat reflectance for hemispherically diffuse solar radiation. Default value is 0.5.",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "beam_visible_transmittance": {
                                "title": "Beam Visible Transmittance",
                                "description": "The beam visible transmittance of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.",
                                "default": 0,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "beam_visible_reflectance": {
                                "title": "Beam Visible Reflectance",
                                "description": "The beam visible reflectance on the front side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "beam_visible_reflectance_back": {
                                "title": "Beam Visible Reflectance Back",
                                "description": "The beam visible reflectance on the back side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "diffuse_visible_transmittance": {
                                "title": "Diffuse Visible Transmittance",
                                "description": "The slat transmittance for hemispherically diffuse visible radiation. This value should equal \u201cSlat Beam Visible Transmittance.\u201d",
                                "default": 0,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "diffuse_visible_reflectance": {
                                "title": "Diffuse Visible Reflectance",
                                "description": "The front-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cFront Side Slat Beam Visible Reflectance.\u201d Default value is 0.5.",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "diffuse_visible_reflectance_back": {
                                "title": "Diffuse Visible Reflectance Back",
                                "description": "The back-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cBack Side Slat Beam Visible Reflectance. Default value is 0.5.\u201d",
                                "default": 0.5,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "infrared_transmittance": {
                                "title": "Infrared Transmittance",
                                "description": "The slat infrared hemispherical transmittance. It is zero for solid metallic, wooden or glass slats, but may be non-zero in some cases such as for thin plastic slats. The default value is 0.",
                                "default": 0,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "emissivity": {
                                "title": "Emissivity",
                                "description": "Front side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
                                "default": 0.9,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "emissivity_back": {
                                "title": "Emissivity Back",
                                "description": "Back side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
                                "default": 0.9,
                                "exclusiveMaximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "distance_to_glass": {
                                "title": "Distance To Glass",
                                "description": "The distance from the mid-plane of the blind to the adjacent glass in meters. The default value is 0.05.",
                                "default": 0.05,
                                "minimum": 0.01,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "top_opening_multiplier": {
                                "title": "Top Opening Multiplier",
                                "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade. The default value is 0.5",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "bottom_opening_multiplier": {
                                "title": "Bottom Opening Multiplier",
                                "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade. The default value is 0.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "left_opening_multiplier": {
                                "title": "Left Opening Multiplier",
                                "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade. The default value is 0.5.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "right_opening_multiplier": {
                                "title": "Right Opening Multiplier",
                                "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade. The default value is 0.5.",
                                "default": 0.5,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "EnergyWindowMaterialBlind",
                "description": "Window blind material consisting of flat, equally-spaced slats.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "PSZEquipmentType": {
                "title": "PSZEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "PSZAC_ElectricBaseboard",
                    "PSZAC_BoilerBaseboard",
                    "PSZAC_DHWBaseboard",
                    "PSZAC_GasHeaters",
                    "PSZAC_ElectricCoil",
                    "PSZAC_GasCoil",
                    "PSZAC_Boiler",
                    "PSZAC_ASHP",
                    "PSZAC_DHW",
                    "PSZAC",
                    "PSZAC_DCW_ElectricBaseboard",
                    "PSZAC_DCW_BoilerBaseboard",
                    "PSZAC_DCW_GasHeaters",
                    "PSZAC_DCW_ElectricCoil",
                    "PSZAC_DCW_GasCoil",
                    "PSZAC_DCW_Boiler",
                    "PSZAC_DCW_ASHP",
                    "PSZAC_DCW_DHW",
                    "PSZAC_DCW",
                    "PSZHP"
                ],
                "type": "string"
            },
            "PSZ": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "economizer_type": {
                                "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
                                "default": "NoEconomizer",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AllAirEconomizerType"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "type": {
                                "title": "Type",
                                "default": "PSZ",
                                "pattern": "^PSZ$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the PVAVEquipmentType enumeration.",
                                "default": "PSZAC_ElectricBaseboard",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/PSZEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "PSZ",
                "description": "Packaged Single-Zone (PSZ) HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "FurnaceEquipmentType": {
                "title": "FurnaceEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "Furnace"
                ],
                "type": "string"
            },
            "ForcedAirFurnace": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "economizer_type": {
                                "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
                                "default": "NoEconomizer",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AllAirEconomizerType"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "type": {
                                "title": "Type",
                                "default": "ForcedAirFurnace",
                                "pattern": "^ForcedAirFurnace$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the FurnaceEquipmentType enumeration.",
                                "default": "Furnace",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/FurnaceEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ForcedAirFurnace",
                "description": "Forced Air Furnace HVAC system. Intended for spaces only requiring heating.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "FCUwithDOASEquipmentType": {
                "title": "FCUwithDOASEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "DOAS_FCU_Chiller_Boiler",
                    "DOAS_FCU_Chiller_ASHP",
                    "DOAS_FCU_Chiller_DHW",
                    "DOAS_FCU_Chiller_ElectricBaseboard",
                    "DOAS_FCU_Chiller_GasHeaters",
                    "DOAS_FCU_Chiller",
                    "DOAS_FCU_ACChiller_Boiler",
                    "DOAS_FCU_ACChiller_ASHP",
                    "DOAS_FCU_ACChiller_DHW",
                    "DOAS_FCU_ACChiller_ElectricBaseboard",
                    "DOAS_FCU_ACChiller_GasHeaters",
                    "DOAS_FCU_ACChiller",
                    "DOAS_FCU_DCW_Boiler",
                    "DOAS_FCU_DCW_ASHP",
                    "DOAS_FCU_DCW_DHW",
                    "DOAS_FCU_DCW_ElectricBaseboard",
                    "DOAS_FCU_DCW_GasHeaters",
                    "DOAS_FCU_DCW"
                ],
                "type": "string"
            },
            "FCUwithDOASAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "doas_availability_schedule": {
                                "title": "Doas Availability Schedule",
                                "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "FCUwithDOASAbridged",
                                "pattern": "^FCUwithDOASAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the FCUwithDOASEquipmentType enumeration.",
                                "default": "DOAS_FCU_Chiller_Boiler",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/FCUwithDOASEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "FCUwithDOASAbridged",
                "description": "Fan Coil Unit (FCU) with DOAS HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WSHPwithDOASEquipmentType": {
                "title": "WSHPwithDOASEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "DOAS_WSHP_FluidCooler_Boiler",
                    "DOAS_WSHP_CoolingTower_Boiler",
                    "DOAS_WSHP_GSHP",
                    "DOAS_WSHP_DCW_DHW"
                ],
                "type": "string"
            },
            "WSHPwithDOASAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "doas_availability_schedule": {
                                "title": "Doas Availability Schedule",
                                "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "WSHPwithDOASAbridged",
                                "pattern": "^WSHPwithDOASAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the WSHPwithDOASEquipmentType enumeration.",
                                "default": "DOAS_WSHP_FluidCooler_Boiler",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WSHPwithDOASEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "WSHPwithDOASAbridged",
                "description": "Water Source Heat Pump (WSHP) with DOAS HVAC system.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "FCUEquipmentType": {
                "title": "FCUEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "FCU_Chiller_Boiler",
                    "FCU_Chiller_ASHP",
                    "FCU_Chiller_DHW",
                    "FCU_Chiller_ElectricBaseboard",
                    "FCU_Chiller_GasHeaters",
                    "FCU_Chiller",
                    "FCU_ACChiller_Boiler",
                    "FCU_ACChiller_ASHP",
                    "FCU_ACChiller_DHW",
                    "FCU_ACChiller_ElectricBaseboard",
                    "FCU_ACChiller_GasHeaters",
                    "FCU_ACChiller",
                    "FCU_DCW_Boiler",
                    "FCU_DCW_ASHP",
                    "FCU_DCW_DHW",
                    "FCU_DCW_ElectricBaseboard",
                    "FCU_DCW_GasHeaters",
                    "FCU_DCW"
                ],
                "type": "string"
            },
            "FCU": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "FCU",
                                "pattern": "^FCU$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the FCUEquipmentType enumeration.",
                                "default": "FCU_Chiller_Boiler",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/FCUEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "FCU",
                "description": "Fan Coil Unit (FCU) heating/cooling system (with no ventilation).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "VRFEquipmentType": {
                "title": "VRFEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "VRF"
                ],
                "type": "string"
            },
            "VRF": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "VRF",
                                "pattern": "^VRF$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the VRFEquipmentType enumeration.",
                                "default": "VRF",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/VRFEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "VRF",
                "description": "Variable Refrigerant Flow (VRF) heating/cooling system (with no ventilation).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "BaseboardEquipmentType": {
                "title": "BaseboardEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "ElectricBaseboard",
                    "BoilerBaseboard",
                    "ASHPBaseboard",
                    "DHWBaseboard"
                ],
                "type": "string"
            },
            "Baseboard": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Baseboard",
                                "pattern": "^Baseboard$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the BaseboardEquipmentType enumeration.",
                                "default": "ElectricBaseboard",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BaseboardEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Baseboard",
                "description": "Baseboard heating system. Intended for spaces only requiring heating.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WindowACEquipmentType": {
                "title": "WindowACEquipmentType",
                "description": "An enumeration.",
                "enum": [
                    "WindowAC_ElectricBaseboard",
                    "WindowAC_BoilerBaseboard",
                    "WindowAC_ASHPBaseboard",
                    "WindowAC_DHWBaseboard",
                    "WindowAC_Furnace",
                    "WindowAC_GasHeaters",
                    "WindowAC"
                ],
                "type": "string"
            },
            "WindowAC": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "WindowAC",
                                "pattern": "^WindowAC$",
                                "type": "string",
                                "readOnly": true
                            },
                            "equipment_type": {
                                "description": "Text for the specific type of system equipment from the WindowACEquipmentType enumeration.",
                                "default": "WindowAC_ElectricBaseboard",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/WindowACEquipmentType"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "WindowAC",
                "description": "Window Air Conditioning cooling system (with optional heating).",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "PeopleAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "people_per_area",
                            "occupancy_schedule",
                            "activity_schedule"
                        ],
                        "properties": {
                            "people_per_area": {
                                "title": "People Per Area",
                                "description": "People per floor area expressed as [people/m2]",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "occupancy_schedule": {
                                "title": "Occupancy Schedule",
                                "description": "Identifier of a schedule for the occupancy over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the people_per_area to yield a complete occupancy profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "activity_schedule": {
                                "title": "Activity Schedule",
                                "description": "Identifier of a schedule for the activity of the occupants over the course of the year. The type of this schedule should be Power and the values of the schedule equal to the number of Watts given off by an individual person in the room.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "PeopleAbridged",
                                "pattern": "^PeopleAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "radiant_fraction": {
                                "title": "Radiant Fraction",
                                "description": "The radiant fraction of sensible heat released by people. (Default: 0.3).",
                                "default": 0.3,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_fraction": {
                                "title": "Latent Fraction",
                                "description": "Number for the latent fraction of heat gain due to people or an Autocalculate object.",
                                "default": {
                                    "type": "Autocalculate"
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Autocalculate"
                                    },
                                    {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "format": "double"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "PeopleAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ElectricEquipmentAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_EquipmentBase"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ElectricEquipmentAbridged",
                                "pattern": "^ElectricEquipmentAbridged$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ElectricEquipmentAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ServiceHotWaterAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "flow_per_area",
                            "schedule"
                        ],
                        "properties": {
                            "flow_per_area": {
                                "title": "Flow Per Area",
                                "description": "Number for the total volume flow rate of water per unit area of floor [L/h-m2].",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "Identifier of the schedule for the hot water use over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_area to yield a complete water usage profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "ServiceHotWaterAbridged",
                                "pattern": "^ServiceHotWaterAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "target_temperature": {
                                "title": "Target Temperature",
                                "description": "Number for the target temperature of water out of the tap (C). This the temperature after hot water has been mixed with cold water from the water mains. The default is 60C, which essentially assumes that the flow_per_area on this object is only for water straight out of the water heater.",
                                "default": 60,
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "sensible_fraction": {
                                "title": "Sensible Fraction",
                                "description": "A number between 0 and 1 for the fraction of the total hot water load given off as sensible heat in the zone.",
                                "default": 0.2,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_fraction": {
                                "title": "Latent Fraction",
                                "description": "A number between 0 and 1 for the fraction of the total hot water load that is latent.",
                                "default": 0.05,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ServiceHotWaterAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "VentilationAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "VentilationAbridged",
                                "pattern": "^VentilationAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "flow_per_person": {
                                "title": "Flow Per Person",
                                "description": "Intensity of ventilation in[] m3/s per person]. Note that setting this value does not mean that ventilation is varied based on real-time occupancy but rather that the design level of ventilation is determined using this value and the People object of the Room.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "flow_per_area": {
                                "title": "Flow Per Area",
                                "description": "Intensity of ventilation in [m3/s per m2 of floor area].",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "air_changes_per_hour": {
                                "title": "Air Changes Per Hour",
                                "description": "Intensity of ventilation in air changes per hour (ACH) for the entire Room.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "flow_per_zone": {
                                "title": "Flow Per Zone",
                                "description": "Intensity of ventilation in m3/s for the entire Room.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "Identifier of the schedule for the ventilation over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the total design flow rate (determined from the sum of the other 4 fields) to yield a complete ventilation profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "VentilationAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "SetpointAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "cooling_schedule",
                            "heating_schedule"
                        ],
                        "properties": {
                            "cooling_schedule": {
                                "title": "Cooling Schedule",
                                "description": "Identifier of the schedule for the cooling setpoint. The values in this schedule should be temperature in [C].",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "heating_schedule": {
                                "title": "Heating Schedule",
                                "description": "Identifier of the schedule for the heating setpoint. The values in this schedule should be temperature in [C].",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "SetpointAbridged",
                                "pattern": "^SetpointAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "humidifying_schedule": {
                                "title": "Humidifying Schedule",
                                "description": "Identifier of the schedule for the humidification setpoint. The values in this schedule should be in [%].",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "dehumidifying_schedule": {
                                "title": "Dehumidifying Schedule",
                                "description": "Identifier of the schedule for the dehumidification setpoint. The values in this schedule should be in [%].",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "SetpointAbridged",
                "description": "Used to specify information about the setpoint schedule.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ProgramTypeAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ProgramTypeAbridged",
                                "pattern": "^ProgramTypeAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "people": {
                                "title": "People",
                                "description": "People to describe the occupancy of the program. If None, no occupancy will be assumed for the program.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/PeopleAbridged"
                                    }
                                ]
                            },
                            "lighting": {
                                "title": "Lighting",
                                "description": "Lighting to describe the lighting usage of the program. If None, no lighting will be assumed for the program.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/LightingAbridged"
                                    }
                                ]
                            },
                            "electric_equipment": {
                                "title": "Electric Equipment",
                                "description": "ElectricEquipment to describe the usage of electric equipment within the program. If None, no electric equipment will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ElectricEquipmentAbridged"
                                    }
                                ]
                            },
                            "gas_equipment": {
                                "title": "Gas Equipment",
                                "description": "GasEquipment to describe the usage of gas equipment within the program. If None, no gas equipment will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/GasEquipmentAbridged"
                                    }
                                ]
                            },
                            "service_hot_water": {
                                "title": "Service Hot Water",
                                "description": "ServiceHotWater object to describe the usage of hot water within the program. If None, no hot water will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ServiceHotWaterAbridged"
                                    }
                                ]
                            },
                            "infiltration": {
                                "title": "Infiltration",
                                "description": "Infiltration to describe the outdoor air leakage of the program. If None, no infiltration will be assumed for the program.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/InfiltrationAbridged"
                                    }
                                ]
                            },
                            "ventilation": {
                                "title": "Ventilation",
                                "description": "Ventilation to describe the minimum outdoor air requirement of the program. If None, no ventilation requirement will be assumed.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/VentilationAbridged"
                                    }
                                ]
                            },
                            "setpoint": {
                                "title": "Setpoint",
                                "description": "Setpoint object to describe the temperature and humidity setpoints of the program.  If None, the ProgramType cannot be assigned to a Room that is conditioned.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/SetpointAbridged"
                                    }
                                ]
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ProgramTypeAbridged",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ModelEnergyProperties": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ModelEnergyProperties",
                                "pattern": "^ModelEnergyProperties$",
                                "type": "string",
                                "readOnly": true
                            },
                            "construction_sets": {
                                "title": "Construction Sets",
                                "description": "List of all ConstructionSets in the Model.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ConstructionSetAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ConstructionSet"
                                        }
                                    ]
                                }
                            },
                            "constructions": {
                                "title": "Constructions",
                                "description": "A list of all unique constructions in the model. This includes constructions across all the Model construction_sets.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/OpaqueConstructionAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/WindowConstructionAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ShadeConstruction"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AirBoundaryConstructionAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/OpaqueConstruction"
                                        },
                                        {
                                            "$ref": "#/components/schemas/WindowConstruction"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AirBoundaryConstruction"
                                        }
                                    ]
                                }
                            },
                            "materials": {
                                "title": "Materials",
                                "description": "A list of all unique materials in the model. This includes materials needed to make the Model constructions.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/EnergyMaterial"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyMaterialNoMass"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGas"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGasCustom"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGasMixture"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialSimpleGlazSys"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialBlind"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialGlazing"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EnergyWindowMaterialShade"
                                        }
                                    ]
                                }
                            },
                            "hvacs": {
                                "title": "Hvacs",
                                "description": "List of all HVAC systems in the Model.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/IdealAirSystemAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/VAV"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PVAV"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PSZ"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PTAC"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ForcedAirFurnace"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FCUwithDOASAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/WSHPwithDOASAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/VRFwithDOASAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FCU"
                                        },
                                        {
                                            "$ref": "#/components/schemas/WSHP"
                                        },
                                        {
                                            "$ref": "#/components/schemas/VRF"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Baseboard"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EvaporativeCooler"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Residential"
                                        },
                                        {
                                            "$ref": "#/components/schemas/WindowAC"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GasUnitHeater"
                                        }
                                    ]
                                }
                            },
                            "program_types": {
                                "title": "Program Types",
                                "description": "List of all ProgramTypes in the Model.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ProgramTypeAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ProgramType"
                                        }
                                    ]
                                }
                            },
                            "schedules": {
                                "title": "Schedules",
                                "description": "A list of all unique schedules in the model. This includes schedules across all HVAC systems, ProgramTypes and ContextShades.",
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ScheduleRulesetAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ScheduleFixedIntervalAbridged"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ScheduleRuleset"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ScheduleFixedInterval"
                                        }
                                    ]
                                }
                            },
                            "schedule_type_limits": {
                                "title": "Schedule Type Limits",
                                "description": "A list of all unique ScheduleTypeLimits in the model. This all ScheduleTypeLimits needed to make the Model schedules.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ScheduleTypeLimit"
                                }
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "ModelEnergyProperties",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "BuildingEnergyPropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "BuildingEnergyPropertiesAbridged",
                                "pattern": "^BuildingEnergyPropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "construction_set": {
                                "title": "Construction Set",
                                "description": "Name of a ConstructionSet to specify all constructions for the Building. If None, the Model global_construction_set will be used.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "BuildingEnergyPropertiesAbridged",
                "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "BuildingPropertiesAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "BuildingPropertiesAbridged",
                                "pattern": "^BuildingPropertiesAbridged$",
                                "type": "string",
                                "readOnly": true
                            },
                            "energy": {
                                "$ref": "#/components/schemas/BuildingEnergyPropertiesAbridged"
                            }
                        }
                    }
                ],
                "title": "BuildingPropertiesAbridged",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Building": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "unique_stories",
                            "properties"
                        ],
                        "properties": {
                            "unique_stories": {
                                "title": "Unique Stories",
                                "description": "An array of unique dragonfly Story objects that together form the entire building. Stories should generally be ordered from lowest floor to highest floor. Note that, if a given Story is repeated several times over the height of the building, the unique story included in this list should be the first (lowest) story of the repeated floors.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Story"
                                }
                            },
                            "properties": {
                                "title": "Properties",
                                "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BuildingPropertiesAbridged"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Building",
                                "pattern": "^Building$",
                                "type": "string",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Building",
                "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Units": {
                "title": "Units",
                "description": "An enumeration.",
                "enum": [
                    "Meters",
                    "Millimeters",
                    "Feet",
                    "Inches",
                    "Centimeters"
                ],
                "type": "string"
            },
            "ModelProperties": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "ModelProperties",
                                "pattern": "^ModelProperties$",
                                "type": "string",
                                "readOnly": true
                            },
                            "energy": {
                                "$ref": "#/components/schemas/ModelEnergyProperties"
                            }
                        }
                    }
                ],
                "title": "ModelProperties",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "Model": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "buildings",
                            "properties"
                        ],
                        "properties": {
                            "buildings": {
                                "title": "Buildings",
                                "description": "A list of Buildings in the model.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Building"
                                }
                            },
                            "properties": {
                                "title": "Properties",
                                "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ModelProperties"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "Model",
                                "pattern": "^Model$",
                                "type": "string",
                                "readOnly": true
                            },
                            "version": {
                                "title": "Version",
                                "description": "Text string for the current version of the schema.",
                                "default": "0.0.0",
                                "pattern": "([0-9]+)\\.([0-9]+)\\.([0-9]+)",
                                "type": "string"
                            },
                            "context_shades": {
                                "title": "Context Shades",
                                "description": "A list of ContextShades in the model.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContextShade"
                                }
                            },
                            "units": {
                                "description": "Text indicating the units in which the model geometry exists. This is used to scale the geometry to the correct units for simulation engines like EnergyPlus, which requires all geometry be in meters.",
                                "default": "Meters",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Units"
                                    }
                                ]
                            },
                            "tolerance": {
                                "title": "Tolerance",
                                "description": "The maximum difference between x, y, and z values at which vertices are considered equivalent. This value should be in the Model units and is used in a variety of checks and operations. A value of 0 will result in bypassing all checks so it is recommended that this always be a positive number when checks have not already been performed on a Model. The default of 0.01 is suitable for models in meters.",
                                "default": 0.01,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "angle_tolerance": {
                                "title": "Angle Tolerance",
                                "description": "The max angle difference in degrees that vertices are allowed to differ from one another in order to consider them colinear. This value is used in a variety of checks and operations that can be performed on geometry. A value of 0 will result in no checks and an inability to perform certain operations so it is recommended that this always be a positive number when checks have not already been performed on a given Model.",
                                "default": 1.0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "Model",
                "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "IDdEnergyBaseModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "title": "Identifier",
                                "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "display_name": {
                                "title": "Display Name",
                                "description": "Display name of the object with no character restrictions.",
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "IDdEnergyBaseModel",
                                "type": "string",
                                "pattern": "^IDdEnergyBaseModel$",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "identifier"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "IDdEnergyBaseModel",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_FaceSubSetAbridged": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "Identifier for an OpaqueConstruction for faces with a Surface or Adiabatic boundary condition.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "exterior_construction": {
                                "title": "Exterior Construction",
                                "description": "Identifier for an OpaqueConstruction for faces with an Outdoors boundary condition.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "ground_construction": {
                                "title": "Ground Construction",
                                "description": "Identifier for an OpaqueConstruction for faces with a Ground boundary condition.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "_FaceSubSetAbridged",
                                "type": "string",
                                "pattern": "^_FaceSubSetAbridged$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "_FaceSubSetAbridged",
                "description": "A set of constructions for wall, floor, or roof assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_AllAirBase": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "economizer_type": {
                                "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
                                "default": "NoEconomizer",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/AllAirEconomizerType"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "type": {
                                "title": "Type",
                                "default": "_AllAirBase",
                                "type": "string",
                                "pattern": "^_AllAirBase$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "_AllAirBase",
                "description": "Base class for all-air systems.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_TemplateSystem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "_TemplateSystem",
                                "type": "string",
                                "pattern": "^_TemplateSystem$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "_TemplateSystem",
                "description": "Base class for HVAC systems following a standards template.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_FaceSubSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "interior_construction": {
                                "title": "Interior Construction",
                                "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "exterior_construction": {
                                "title": "Exterior Construction",
                                "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "ground_construction": {
                                "title": "Ground Construction",
                                "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/OpaqueConstruction"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "_FaceSubSet",
                                "type": "string",
                                "pattern": "^_FaceSubSet$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "_FaceSubSet",
                "description": "A set of constructions for wall, floor, or roof assemblies.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_HeatCoolBase": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "type": {
                                "title": "Type",
                                "default": "_HeatCoolBase",
                                "type": "string",
                                "pattern": "^_HeatCoolBase$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "_HeatCoolBase",
                "description": "Base class for all heating/cooling systems without any ventilation.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_EquipmentBase": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "required": [
                            "watts_per_area",
                            "schedule"
                        ],
                        "properties": {
                            "watts_per_area": {
                                "title": "Watts Per Area",
                                "description": "Equipment level per floor area as [W/m2].",
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "schedule": {
                                "title": "Schedule",
                                "description": "Identifier of the schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "radiant_fraction": {
                                "title": "Radiant Fraction",
                                "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_fraction": {
                                "title": "Latent Fraction",
                                "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "lost_fraction": {
                                "title": "Lost Fraction",
                                "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "type": {
                                "title": "Type",
                                "default": "_EquipmentBase",
                                "type": "string",
                                "pattern": "^_EquipmentBase$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "_EquipmentBase",
                "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "IDdBaseModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "title": "Identifier",
                                "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "[A-Za-z0-9_-]",
                                "type": "string"
                            },
                            "display_name": {
                                "title": "Display Name",
                                "description": "Display name of the object with no character restrictions.",
                                "type": "string"
                            },
                            "user_data": {
                                "title": "User Data",
                                "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
                                "type": "object"
                            },
                            "type": {
                                "title": "Type",
                                "default": "IDdBaseModel",
                                "type": "string",
                                "pattern": "^IDdBaseModel$",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "identifier"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "IDdBaseModel",
                "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_LouversBase": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "depth": {
                                "title": "Depth",
                                "description": "A number for the depth to extrude the louvers.",
                                "exclusiveMinimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "offset": {
                                "title": "Offset",
                                "description": "A number for the distance to louvers from the wall.",
                                "default": 0,
                                "minimum": 0,
                                "type": "number",
                                "format": "double"
                            },
                            "angle": {
                                "title": "Angle",
                                "description": "A number between -90 and 90 for the for an angle to rotate the louvers in degrees. 0 indicates louvers perpendicular to the wall. Positive values indicate a downward rotation. Negative values indicate an upward rotation.",
                                "default": 0,
                                "minimum": -90,
                                "maximum": 90,
                                "type": "number",
                                "format": "double"
                            },
                            "contour_vector": {
                                "title": "Contour Vector",
                                "description": "A list of two float values representing the (x, y) of a 2D vector for the direction along which contours are generated. (0, 1) will generate horizontal contours, (1, 0) will generate vertical contours, and (1, 1) will generate diagonal contours.",
                                "default": [
                                    0,
                                    1
                                ],
                                "minItems": 2,
                                "maxItems": 2,
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "flip_start_side": {
                                "title": "Flip Start Side",
                                "description": "Boolean to note whether the side the louvers start from should be flipped. Default is False to have contours on top or right. Setting to True will start contours on the bottom or left.",
                                "default": false,
                                "type": "boolean"
                            },
                            "type": {
                                "title": "Type",
                                "default": "_LouversBase",
                                "type": "string",
                                "pattern": "^_LouversBase$",
                                "readOnly": true
                            }
                        },
                        "required": [
                            "depth"
                        ],
                        "additionalProperties": false
                    }
                ],
                "title": "_LouversBase",
                "description": "Base class for for a series of louvered shades over a wall.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_DOASBase": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IDdEnergyBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "vintage": {
                                "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
                                "default": "ASHRAE_2013",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Vintages"
                                    }
                                ]
                            },
                            "sensible_heat_recovery": {
                                "title": "Sensible Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "latent_heat_recovery": {
                                "title": "Latent Heat Recovery",
                                "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 1,
                                "type": "number",
                                "format": "double"
                            },
                            "demand_controlled_ventilation": {
                                "title": "Demand Controlled Ventilation",
                                "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
                                "default": false,
                                "type": "boolean"
                            },
                            "doas_availability_schedule": {
                                "title": "Doas Availability Schedule",
                                "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                            },
                            "type": {
                                "title": "Type",
                                "default": "_DOASBase",
                                "type": "string",
                                "pattern": "^_DOASBase$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "_DOASBase",
                "description": "Base class for DOAS systems.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "DatedBaseModel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/_OpenAPIGenBaseModel"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "title": "Type",
                                "default": "DatedBaseModel",
                                "type": "string",
                                "pattern": "^DatedBaseModel$",
                                "readOnly": true
                            }
                        },
                        "additionalProperties": false
                    }
                ],
                "title": "DatedBaseModel",
                "description": "Base class for all objects needing to check for a valid Date.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "_OpenAPIGenBaseModel": {
                "title": "_OpenAPIGenBaseModel",
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "description": "A base class to use when there is no baseclass available to fall on.",
                        "default": "InvalidType",
                        "type": "string",
                        "readOnly": true
                    }
                },
                "discriminator": {
                    "propertyName": "type"
                }
            }
        }
    }
}